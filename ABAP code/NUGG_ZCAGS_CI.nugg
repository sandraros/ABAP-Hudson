<?xml version="1.0" encoding="utf-16"?>
<nugget name="ZCAGS_CI">
 <CLAS CLSNAME="ZCL_CAGS_CI_ABAP_UNIT_ASSERT" VERSION="1" LANGU="E" DESCRIPT="Abap unit assertions" UUID="B499BAB2546E1ED2AAFE73E38506AA10" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="774888" CREATEDON="20130423" CHANGEDON="20130522" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="731" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>*----------------------------------------------------------------------*
*       CLASS zcl_cags_ci_abap_unit_assert DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS zcl_cags_ci_abap_unit_assert DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS set_assert_table_result
        IMPORTING
          it_result TYPE tchar255.

    METHODS assert_equal_line
      IMPORTING
        i_expected_line TYPE string
        i_prefix_chars_to_compare TYPE i OPTIONAL.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.

    DATA:
        mt_assert_table_result TYPE tchar255,
        m_assert_table_counter TYPE i.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZCL_CAGS_CI_ABAP_UNIT_ASSERT" CMPNAME="MT_ASSERT_TABLE_RESULT" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="774888" CREATEDON="20130423" CHANGEDBY="774888" CHANGEDON="20130522" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TCHAR255" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_ABAP_UNIT_ASSERT" CMPNAME="M_ASSERT_TABLE_COUNTER" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="774888" CREATEDON="20130423" CHANGEDBY="774888" CHANGEDON="20130522" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="I" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_CAGS_CI_ABAP_UNIT_ASSERT" CMPNAME="ASSERT_EQUAL_LINE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130423" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="731" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_ABAP_UNIT_ASSERT" CMPNAME="ASSERT_EQUAL_LINE" SCONAME="I_EXPECTED_LINE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130423" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_ABAP_UNIT_ASSERT" CMPNAME="ASSERT_EQUAL_LINE" SCONAME="I_PREFIX_CHARS_TO_COMPARE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130423" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
   <source>METHOD assert_equal_line.

    DATA l_current_line TYPE string.
    DATA l_expected_line TYPE string.
    READ TABLE me-&gt;mt_assert_table_result INDEX me-&gt;m_assert_table_counter INTO l_current_line.
    ADD 1 TO  me-&gt;m_assert_table_counter.

    IF ( i_prefix_chars_to_compare IS SUPPLIED ).
      l_current_line = i_expected_line(i_prefix_chars_to_compare).
    ENDIF.

    cl_abap_unit_assert=&gt;assert_equals(
      act = l_current_line
      exp = i_expected_line
      msg = &apos;Line not as expected&apos;
    ).

  ENDMETHOD.                    &quot;assert_equal_line</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_ABAP_UNIT_ASSERT" CMPNAME="SET_ASSERT_TABLE_RESULT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130423" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="731" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_ABAP_UNIT_ASSERT" CMPNAME="SET_ASSERT_TABLE_RESULT" SCONAME="IT_RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130423" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TCHAR255"/>
   <source>METHOD set_assert_table_result.

    me-&gt;mt_assert_table_result = it_result.
    me-&gt;m_assert_table_counter = 1.

  ENDMETHOD.                    &quot;set_assert_result</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" VERSION="1" LANGU="E" DESCRIPT="Code coverage measurements" UUID="B499BAB2546E1EE2A5A5E09195B6D390" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="774888" CREATEDON="20130325" CHANGEDON="20130522" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="731" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>*----------------------------------------------------------------------*
*       CLASS ZCL_CAGS_CI_CODE_COVERAGE DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS zcl_cags_ci_code_coverage DEFINITION
  PUBLIC
  CREATE PUBLIC .

  PUBLIC SECTION.
    TYPE-POOLS abap .

    CLASS-METHODS get_instance
      RETURNING
        value(ro_instance) TYPE REF TO zcl_cags_ci_code_coverage .

    CLASS-METHODS set_instance
      IMPORTING
        value(io_instance) TYPE REF TO zcl_cags_ci_code_coverage .

    CLASS-METHODS free_memory .
    METHODS constructor .
    METHODS add_class_coverage
      IMPORTING
        !is_class_coverage TYPE zcags_ci_code_coverage_s .
    METHODS add_coverage_values
      IMPORTING
        !is_new_coverage TYPE zcags_ci_code_coverage_val_s
      CHANGING
        !cs_coverage TYPE zcags_ci_code_coverage_val_s .
    METHODS append_coverage_details
      IMPORTING
        !is_object_code_coverage TYPE zcags_ci_code_coverage_s
      CHANGING
        !ct_xml_content TYPE tchar255 .
    METHODS build_xml_content_package
      RETURNING
        value(rt_code_covare_xml_content) TYPE tchar255 .
    METHODS build_xml_content_user
      RETURNING
        value(rt_code_covare_xml_content) TYPE tchar255 .
    METHODS create_coverage_line
      IMPORTING
        !i_prefix TYPE string
        !i_type TYPE string
        !is_coverage_values TYPE zcags_ci_code_coverage_val_s
      RETURNING
        value(r_coverage_line) TYPE string .
    METHODS create_global_total_coverage
      IMPORTING
        !it_packages_total_coverage TYPE zcags_ci_code_coverage_tt
      RETURNING
        value(rs_global_total_coverage) TYPE zcags_ci_code_coverage_s .
    METHODS create_no_covered_class
      IMPORTING
        !i_object_full_name TYPE string
        !i_object_name TYPE string
        !i_package_name TYPE string
      RETURNING
        value(rs_code_coverage) TYPE zcags_ci_code_coverage_s .
    METHODS create_packages_total_coverage
      RETURNING
        value(rt_packages_total_coverage) TYPE zcags_ci_code_coverage_tt .
    METHODS create_user_total_coverage
      RETURNING
        value(rt_packages_total_coverage) TYPE zcags_ci_code_coverage_tt .
    METHODS extract_coverage
      IMPORTING
        !is_source_coverage TYPE cvs_propro_tkey
      RETURNING
        value(rs_result_coverage) TYPE zcags_ci_code_coverage_s .
    METHODS extract_coverage_from_wunit
      IMPORTING
        !it_source_coverage TYPE cvt_wu
      RETURNING
        value(rs_result_coverage) TYPE zcags_ci_code_coverage_s .
    METHODS get_coverage_key
      RETURNING
        value(r_coverage_key) TYPE saunit_d_coverage_analysis_key .
    METHODS is_coverage_enabled
      RETURNING
        value(r_is_enabled) TYPE abap_bool .
    METHODS read_from_memory .
    METHODS save_to_memory .
    METHODS set_coverage_key
      IMPORTING
        !i_coverage_key TYPE saunit_d_coverage_analysis_key .
    METHODS update_covered_value
      CHANGING
        !cs_coverage_values TYPE zcags_ci_code_coverage_val_s .
    METHODS get_coverage_values
      RETURNING
        value(rt_coverage_result) TYPE zcags_ci_code_coverage_tt .</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.

    CLASS-DATA mo_metadata_dao TYPE REF TO zcl_cags_ci_metadata_dao.

    DATA mt_class_level_coverage TYPE zcags_ci_code_coverage_tt .
    CLASS-DATA mo_instance TYPE REF TO zcl_cags_ci_code_coverage .
    DATA m_coverage_key TYPE saunit_d_coverage_analysis_key .
    CLASS-DATA c_memory_id_class_cov TYPE char35 VALUE &apos;ZCL_CAGS_CI_CODE_COVERAGE_CLASS_COV&apos;. &quot;#EC NOTEXT .  . &quot; .
    CLASS-DATA c_memory_id_cov_key TYPE char34 VALUE &apos;ZCL_CAGS_CI_CODE_COVERAGE_COV_KEY&apos;. &quot;#EC NOTEXT .  . &quot; .</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" EXPLICIT="X" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="C_MEMORY_ID_CLASS_COV" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="5 " AUTHOR="774888" CREATEDON="20130325" CHANGEDON="20130522" ATTDECLTYP="1" ATTVALUE="&apos;ZCL_CAGS_CI_CODE_COVERAGE_CLASS_COV&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR35" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="731" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="C_MEMORY_ID_COV_KEY" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="6 " AUTHOR="774888" CREATEDON="20130325" CHANGEDON="20130522" ATTDECLTYP="1" ATTVALUE="&apos;ZCL_CAGS_CI_CODE_COVERAGE_COV_KEY&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR34" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="731" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="MO_INSTANCE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="774888" CREATEDON="20130325" CHANGEDON="20130522" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_CAGS_CI_CODE_COVERAGE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="731" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="MO_METADATA_DAO" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="774888" CREATEDON="20130325" CHANGEDON="20130522" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_CAGS_CI_METADATA_DAO" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="731" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="MT_CLASS_LEVEL_COVERAGE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="774888" CREATEDON="20130325" CHANGEDON="20130522" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_TT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="731" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="M_COVERAGE_KEY" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " AUTHOR="774888" CREATEDON="20130325" CHANGEDON="20130522" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SAUNIT_D_COVERAGE_ANALYSIS_KEY" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="731" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="ADD_CLASS_COVERAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="ADD_CLASS_COVERAGE" SCONAME="IS_CLASS_COVERAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_S"/>
   <source>METHOD add_class_coverage.
    DATA ls_existing_class_coverage TYPE zcags_ci_code_coverage_s.
    DATA l_row_to_change_index TYPE sy-tabix.

    READ TABLE mt_class_level_coverage INTO ls_existing_class_coverage WITH KEY name = is_class_coverage-name.
    l_row_to_change_index = sy-tabix.

    IF ( ls_existing_class_coverage IS INITIAL ).

      INSERT is_class_coverage INTO TABLE mt_class_level_coverage.

    ELSE.

      ls_existing_class_coverage-class_coverage = is_class_coverage-class_coverage.
      ls_existing_class_coverage-method_coverage = is_class_coverage-method_coverage.
      ls_existing_class_coverage-block_coverage = is_class_coverage-block_coverage.
      ls_existing_class_coverage-line_coverage = is_class_coverage-line_coverage.

      MODIFY mt_class_level_coverage INDEX l_row_to_change_index FROM ls_existing_class_coverage.

    ENDIF.

  ENDMETHOD.                    &quot;add_class_coverage</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="ADD_COVERAGE_VALUES" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="ADD_COVERAGE_VALUES" SCONAME="IS_NEW_COVERAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_VAL_S"/>
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="ADD_COVERAGE_VALUES" SCONAME="CS_COVERAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_VAL_S"/>
   <source>METHOD add_coverage_values.

    cs_coverage-count_covered = cs_coverage-count_covered + is_new_coverage-count_covered.
    cs_coverage-count_total = cs_coverage-count_total + is_new_coverage-count_total.
    cs_coverage-percent = cs_coverage-count_covered * 100 / cs_coverage-count_total.

  ENDMETHOD.                    &quot;ADD_COVERAGE_VALUES</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="APPEND_COVERAGE_DETAILS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="APPEND_COVERAGE_DETAILS" SCONAME="IS_OBJECT_CODE_COVERAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_S"/>
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="APPEND_COVERAGE_DETAILS" SCONAME="CT_XML_CONTENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TCHAR255"/>
   <source>METHOD append_coverage_details.

    DATA l_line TYPE string.

    l_line = create_coverage_line( i_prefix = &apos;      &apos; i_type = &apos;class&apos; is_coverage_values = is_object_code_coverage-class_coverage ).
    APPEND l_line TO ct_xml_content.
    l_line = create_coverage_line( i_prefix = &apos;      &apos; i_type = &apos;method&apos; is_coverage_values = is_object_code_coverage-method_coverage ).
    APPEND l_line TO ct_xml_content.
    l_line = create_coverage_line( i_prefix = &apos;      &apos; i_type = &apos;block&apos; is_coverage_values = is_object_code_coverage-block_coverage ).
    APPEND l_line TO ct_xml_content.
    l_line = create_coverage_line( i_prefix = &apos;      &apos; i_type = &apos;line&apos; is_coverage_values = is_object_code_coverage-line_coverage ).
    APPEND l_line TO ct_xml_content.


  ENDMETHOD.                    &quot;append_coverage_details</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="BUILD_XML_CONTENT_PACKAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="BUILD_XML_CONTENT_PACKAGE" SCONAME="RT_CODE_COVARE_XML_CONTENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="TCHAR255"/>
   <source>METHOD build_xml_content_package.

    DATA lt_code_coverage_xml_content TYPE tchar255.
    DATA l_datetime TYPE string.
    l_datetime = |{ sy-datum } { sy-uzeit }|.

    DATA l_line TYPE string.
    l_line = |&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!-- EMMA report from ABAP --&gt;|.
    APPEND l_line TO lt_code_coverage_xml_content.
    l_line = |&lt;report created=&quot;{ l_datetime }&quot;&gt;|.
    APPEND l_line TO lt_code_coverage_xml_content.
    l_line = |  &lt;data&gt;|.
    APPEND l_line TO lt_code_coverage_xml_content.
    l_line = |    &lt;all name=&quot;all classes&quot;&gt;|.
    APPEND l_line TO lt_code_coverage_xml_content.


    DATA ls_package_coverage TYPE zcags_ci_code_coverage_s.
    DATA l_package_name TYPE zcags_ci_code_coverage_s-package.
    DATA l_package_full_path TYPE string.

    DATA ls_class_coverage  TYPE zcags_ci_code_coverage_s.

    DATA ls_global_total_coverage TYPE zcags_ci_code_coverage_s.

    DATA ls_package_total_coverage TYPE zcags_ci_code_coverage_s.
    DATA lt_package_total_coverage TYPE zcags_ci_code_coverage_tt.

    lt_package_total_coverage = create_packages_total_coverage( ).

    ls_global_total_coverage = create_global_total_coverage( lt_package_total_coverage ).

    append_coverage_details(
      EXPORTING
        is_object_code_coverage =     ls_global_total_coverage
      CHANGING
        ct_xml_content          =     lt_code_coverage_xml_content
    ).

    &quot; For user names packages
    DATA l_displayed_package_name TYPE string.
    DATA l_is_test_for_user TYPE abap_bool.

    LOOP AT lt_package_total_coverage INTO ls_package_coverage.

      l_package_name = ls_package_coverage-parent_object.

      l_package_full_path =  mo_metadata_dao-&gt;find_full_package_path( l_package_name ).
      l_displayed_package_name = l_package_full_path.

      l_line = |      &lt;package name=&quot;{ l_displayed_package_name }&quot;&gt;|.
      APPEND l_line TO lt_code_coverage_xml_content.

      append_coverage_details(
        EXPORTING
          is_object_code_coverage =     ls_package_coverage
        CHANGING
          ct_xml_content          =     lt_code_coverage_xml_content
      ).

      LOOP AT mt_class_level_coverage INTO ls_class_coverage WHERE parent_object = l_package_name.

        l_line = |        &lt;srcfile name=&quot;{ ls_class_coverage-name }&quot;&gt;|.
        APPEND l_line TO lt_code_coverage_xml_content.

        append_coverage_details(
          EXPORTING
            is_object_code_coverage =     ls_class_coverage
          CHANGING
            ct_xml_content          =     lt_code_coverage_xml_content
        ).

        l_line = |          &lt;class name=&quot;{ ls_class_coverage-name }&quot;&gt;|.
        APPEND l_line TO lt_code_coverage_xml_content.

        append_coverage_details(
          EXPORTING
            is_object_code_coverage =     ls_class_coverage
          CHANGING
            ct_xml_content          =     lt_code_coverage_xml_content
        ).

        l_line = |      &lt;/class&gt;|.
        APPEND l_line TO lt_code_coverage_xml_content.
        l_line = |      &lt;/srcfile&gt;|.
        APPEND l_line TO lt_code_coverage_xml_content.

      ENDLOOP.

      l_line = |      &lt;/package&gt;|.
      APPEND l_line TO lt_code_coverage_xml_content.

    ENDLOOP.

    l_line = |    &lt;/all&gt;|.
    APPEND l_line TO lt_code_coverage_xml_content.
    l_line = |  &lt;/data&gt;|.
    APPEND l_line TO lt_code_coverage_xml_content.
    l_line = |&lt;/report&gt;|.
    APPEND l_line TO lt_code_coverage_xml_content.

    rt_code_covare_xml_content = lt_code_coverage_xml_content.

  ENDMETHOD.                    &quot;build_xml_content_package</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="BUILD_XML_CONTENT_USER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="BUILD_XML_CONTENT_USER" SCONAME="RT_CODE_COVARE_XML_CONTENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="TCHAR255"/>
   <source>METHOD build_xml_content_user.

    DATA lt_code_coverage_xml_content TYPE tchar255.
    DATA l_datetime TYPE string.
    l_datetime = |{ sy-datum } { sy-uzeit }|.

    DATA l_line TYPE string.
    l_line = |&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!-- EMMA report from ABAP --&gt;|.
    APPEND l_line TO lt_code_coverage_xml_content.
    l_line = |&lt;report created=&quot;{ l_datetime }&quot;&gt;|.
    APPEND l_line TO lt_code_coverage_xml_content.
    l_line = |  &lt;data&gt;|.
    APPEND l_line TO lt_code_coverage_xml_content.
    l_line = |    &lt;all name=&quot;all classes&quot;&gt;|.
    APPEND l_line TO lt_code_coverage_xml_content.


    DATA ls_package_coverage TYPE zcags_ci_code_coverage_s.
    DATA l_package_name TYPE string.
    DATA l_package_full_path TYPE string.

    DATA ls_class_coverage  TYPE zcags_ci_code_coverage_s.

    DATA ls_global_total_coverage TYPE zcags_ci_code_coverage_s.

    DATA ls_package_total_coverage TYPE zcags_ci_code_coverage_s.
    DATA lt_package_total_coverage TYPE zcags_ci_code_coverage_tt.

    lt_package_total_coverage = create_user_total_coverage( ).

    ls_global_total_coverage = create_global_total_coverage( lt_package_total_coverage ).

    append_coverage_details(
      EXPORTING
        is_object_code_coverage =     ls_global_total_coverage
      CHANGING
        ct_xml_content          =     lt_code_coverage_xml_content
    ).

    &quot; For user names packages
    DATA l_displayed_package_name TYPE string.
    DATA l_is_test_for_user TYPE abap_bool.

    LOOP AT lt_package_total_coverage INTO ls_package_coverage.

      l_package_name = ls_package_coverage-parent_object.

      l_displayed_package_name = ls_package_coverage-name.  &quot; package represented as user name

      l_line = |      &lt;package name=&quot;{ l_displayed_package_name }&quot;&gt;|.
      APPEND l_line TO lt_code_coverage_xml_content.

      append_coverage_details(
        EXPORTING
          is_object_code_coverage =     ls_package_coverage
        CHANGING
          ct_xml_content          =     lt_code_coverage_xml_content
      ).

      LOOP AT mt_class_level_coverage INTO ls_class_coverage WHERE user = ls_package_coverage-user.

        l_line = |        &lt;srcfile name=&quot;{ ls_class_coverage-name }&quot;&gt;|.
        APPEND l_line TO lt_code_coverage_xml_content.

        append_coverage_details(
          EXPORTING
            is_object_code_coverage =     ls_class_coverage
          CHANGING
            ct_xml_content          =     lt_code_coverage_xml_content
        ).

        l_line = |          &lt;class name=&quot;{ ls_class_coverage-name }&quot;&gt;|.
        APPEND l_line TO lt_code_coverage_xml_content.

        append_coverage_details(
          EXPORTING
            is_object_code_coverage =     ls_class_coverage
          CHANGING
            ct_xml_content          =     lt_code_coverage_xml_content
        ).

        l_line = |      &lt;/class&gt;|.
        APPEND l_line TO lt_code_coverage_xml_content.
        l_line = |      &lt;/srcfile&gt;|.
        APPEND l_line TO lt_code_coverage_xml_content.

      ENDLOOP.

      l_line = |      &lt;/package&gt;|.
      APPEND l_line TO lt_code_coverage_xml_content.

    ENDLOOP.

    l_line = |    &lt;/all&gt;|.
    APPEND l_line TO lt_code_coverage_xml_content.
    l_line = |  &lt;/data&gt;|.
    APPEND l_line TO lt_code_coverage_xml_content.
    l_line = |&lt;/report&gt;|.
    APPEND l_line TO lt_code_coverage_xml_content.

    rt_code_covare_xml_content = lt_code_coverage_xml_content.

  ENDMETHOD.                    &quot;BUILD_XML_CONTENT_USER</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD constructor.

    mo_metadata_dao = zcl_cags_ci_metadata_dao=&gt;get_instance( ).

  ENDMETHOD.                    &quot;constructor</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_COVERAGE_LINE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_COVERAGE_LINE" SCONAME="I_PREFIX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_COVERAGE_LINE" SCONAME="I_TYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_COVERAGE_LINE" SCONAME="IS_COVERAGE_VALUES" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_VAL_S"/>
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_COVERAGE_LINE" SCONAME="R_COVERAGE_LINE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD create_coverage_line.

    r_coverage_line = |        &lt;coverage type=&quot;{ i_type }, %&quot; value=&quot;{ is_coverage_values-percent }% ({ is_coverage_values-count_covered }/{ is_coverage_values-count_total })&quot;/&gt;|.

  ENDMETHOD.                    &quot;create_coverage_line</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_GLOBAL_TOTAL_COVERAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_GLOBAL_TOTAL_COVERAGE" SCONAME="IT_PACKAGES_TOTAL_COVERAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_TT"/>
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_GLOBAL_TOTAL_COVERAGE" SCONAME="RS_GLOBAL_TOTAL_COVERAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_S"/>
   <source>METHOD create_global_total_coverage.


    DATA ls_global_total_coverage TYPE zcags_ci_code_coverage_s.
    DATA ls_package_coverage TYPE zcags_ci_code_coverage_s.
    DATA l_package_name TYPE string.



    LOOP AT it_packages_total_coverage INTO ls_package_coverage.

      add_coverage_values(
        EXPORTING is_new_coverage = ls_package_coverage-class_coverage
        CHANGING  cs_coverage     = ls_global_total_coverage-class_coverage
      ).

      add_coverage_values(
        EXPORTING is_new_coverage = ls_package_coverage-method_coverage
        CHANGING  cs_coverage     = ls_global_total_coverage-method_coverage
      ).

      add_coverage_values(
        EXPORTING is_new_coverage = ls_package_coverage-block_coverage
        CHANGING  cs_coverage     = ls_global_total_coverage-block_coverage
      ).

      add_coverage_values(
        EXPORTING is_new_coverage = ls_package_coverage-line_coverage
        CHANGING  cs_coverage     = ls_global_total_coverage-line_coverage
      ).

    ENDLOOP.

    rs_global_total_coverage = ls_global_total_coverage.

  ENDMETHOD.                    &quot;CREATE_GLOBAL_TOTAL_COVERAGE</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_NO_COVERED_CLASS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="12 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_NO_COVERED_CLASS" SCONAME="I_OBJECT_FULL_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_NO_COVERED_CLASS" SCONAME="I_OBJECT_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_NO_COVERED_CLASS" SCONAME="I_PACKAGE_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_NO_COVERED_CLASS" SCONAME="RS_CODE_COVERAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_S"/>
   <source>METHOD create_no_covered_class.

    DATA ls_class_coverage TYPE zcags_ci_code_coverage_s.
    DATA l_is_class_deleted TYPE abap_bool.
    DATA ls_coveraga_empty_select TYPE cvs_select.
    DATA lt_coverage_results TYPE cvt_wu.
    DATA ls_coverage_line TYPE cvs_wu.
    DATA l_program_name TYPE program.
    DATA ls_coverage_values TYPE zcags_ci_code_coverage_s.
    ls_class_coverage-name = i_object_name.
    ls_class_coverage-parent_object = i_package_name.
    ls_class_coverage-class_coverage-count_covered = 0.
    ls_class_coverage-class_coverage-count_total = 1.
    ls_class_coverage-class_coverage-percent = 0.

    mo_metadata_dao-&gt;find_class_metadata(
      EXPORTING
        i_class_name =     ls_class_coverage-name
        i_package    =     ls_class_coverage-parent_object
      IMPORTING
        e_user       =     ls_class_coverage-user
        e_is_deleted =     l_is_class_deleted
    ).

    IF ( l_is_class_deleted = abap_true ).

      CLEAR rs_code_coverage.

    ELSE.

      l_program_name = i_object_full_name.

      TRY.
          cl_coverage_eval=&gt;build_wunit(
            EXPORTING
              im_progname =     l_program_name
              im_select   =     ls_coveraga_empty_select
            IMPORTING
              ex_wunit    =     lt_coverage_results
          ).

          ls_coverage_values = extract_coverage_from_wunit( lt_coverage_results ).
          ls_class_coverage-class_coverage = ls_coverage_values-class_coverage.
          ls_class_coverage-method_coverage = ls_coverage_values-method_coverage.
          ls_class_coverage-block_coverage = ls_coverage_values-block_coverage.
          ls_class_coverage-line_coverage = ls_coverage_values-line_coverage.

        CATCH cx_coverage_root.    &quot; In case of error just create not covered class with 0 statistics
          ls_class_coverage-class_coverage-percent = 0.
          ls_class_coverage-class_coverage-count_covered = 0.
          ls_class_coverage-class_coverage-count_total = 1.
      ENDTRY.

      rs_code_coverage = ls_class_coverage.

    ENDIF.


  ENDMETHOD.                    &quot;create_no_covered_class</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_PACKAGES_TOTAL_COVERAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="13 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_PACKAGES_TOTAL_COVERAGE" SCONAME="RT_PACKAGES_TOTAL_COVERAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_TT"/>
   <source>METHOD create_packages_total_coverage.

    DATA lt_package_total_coverage TYPE zcags_ci_code_coverage_tt.
    DATA ls_package_total_coverage TYPE zcags_ci_code_coverage_s.
    DATA ls_package_coverage TYPE zcags_ci_code_coverage_s.
    DATA l_package_name TYPE string.

    LOOP AT mt_class_level_coverage INTO ls_package_coverage.
      l_package_name = ls_package_coverage-parent_object.

      AT NEW parent_object.
        CLEAR ls_package_total_coverage.
        ls_package_total_coverage-parent_object = l_package_name.
      ENDAT.

      add_coverage_values(
        EXPORTING is_new_coverage = ls_package_coverage-class_coverage
        CHANGING  cs_coverage     = ls_package_total_coverage-class_coverage
      ).

      add_coverage_values(
        EXPORTING is_new_coverage = ls_package_coverage-method_coverage
        CHANGING  cs_coverage     = ls_package_total_coverage-method_coverage
      ).

      add_coverage_values(
        EXPORTING is_new_coverage = ls_package_coverage-block_coverage
        CHANGING  cs_coverage     = ls_package_total_coverage-block_coverage
      ).

      add_coverage_values(
        EXPORTING is_new_coverage = ls_package_coverage-line_coverage
        CHANGING  cs_coverage     = ls_package_total_coverage-line_coverage
      ).

      AT END OF parent_object.
        INSERT ls_package_total_coverage INTO TABLE lt_package_total_coverage.
      ENDAT.

    ENDLOOP.

    rt_packages_total_coverage = lt_package_total_coverage.

  ENDMETHOD.                    &quot;CREATE_PACKAGES_TOTAL_COVERAGE</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_USER_TOTAL_COVERAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="14 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="CREATE_USER_TOTAL_COVERAGE" SCONAME="RT_PACKAGES_TOTAL_COVERAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_TT"/>
   <source>METHOD create_user_total_coverage.

    DATA lt_package_total_coverage TYPE zcags_ci_code_coverage_tt.
    DATA ls_package_total_coverage TYPE zcags_ci_code_coverage_s.
    DATA ls_class_coverage TYPE zcags_ci_code_coverage_s.
    DATA l_package_name TYPE string.

    DATA l_user TYPE uname.
    DATA l_index_to_update TYPE sy-tabix.

    DATA l_class_name TYPE string.

    DATA ls_current_class_coverage TYPE zcags_ci_code_coverage_s.

    LOOP AT mt_class_level_coverage INTO ls_class_coverage.
      l_class_name = ls_class_coverage-name.

      l_user = ls_class_coverage-user.
      IF ( l_user IS INITIAL ).
        l_user = mo_metadata_dao-&gt;find_class_user( l_class_name ).
      ENDIF.

      READ TABLE lt_package_total_coverage WITH KEY name = l_user INTO ls_current_class_coverage.

      IF ( sy-subrc &lt;&gt; 0 ).
        &quot; If does not exists then prepare new object
        ls_class_coverage-name = l_user.
        INSERT ls_class_coverage INTO TABLE lt_package_total_coverage.

      ELSE.

        l_index_to_update = sy-tabix.

        add_coverage_values(
         EXPORTING is_new_coverage = ls_class_coverage-class_coverage
         CHANGING  cs_coverage     = ls_current_class_coverage-class_coverage
       ).

        add_coverage_values(
          EXPORTING is_new_coverage = ls_class_coverage-method_coverage
          CHANGING  cs_coverage     = ls_current_class_coverage-method_coverage
        ).

        add_coverage_values(
          EXPORTING is_new_coverage = ls_class_coverage-block_coverage
          CHANGING  cs_coverage     = ls_current_class_coverage-block_coverage
        ).

        add_coverage_values(
          EXPORTING is_new_coverage = ls_class_coverage-line_coverage
          CHANGING  cs_coverage     = ls_current_class_coverage-line_coverage
        ).

        MODIFY lt_package_total_coverage FROM ls_current_class_coverage INDEX l_index_to_update.

      ENDIF.


    ENDLOOP.

    rt_packages_total_coverage = lt_package_total_coverage.

  ENDMETHOD.                    &quot;create_user_total_coverage</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="EXTRACT_COVERAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="15 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="EXTRACT_COVERAGE" SCONAME="IS_SOURCE_COVERAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CVS_PROPRO_TKEY"/>
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="EXTRACT_COVERAGE" SCONAME="RS_RESULT_COVERAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_S"/>
   <source>METHOD extract_coverage.

    DATA l_package_full_path TYPE string.
    DATA l_package_name TYPE string.
    DATA l_is_class_deleted TYPE abap_bool.

    CLEAR rs_result_coverage.

    l_package_name = is_source_coverage-devclass.
    rs_result_coverage-parent_object = l_package_name.
    rs_result_coverage-name = is_source_coverage-obj_name.

    mo_metadata_dao-&gt;find_class_metadata(
      EXPORTING
        i_class_name    = rs_result_coverage-name
        i_package       = rs_result_coverage-parent_object
      IMPORTING
        e_user        = rs_result_coverage-user
        e_is_deleted  = l_is_class_deleted
    ).

    IF ( l_is_class_deleted = abap_true ).

      CLEAR rs_result_coverage.

    ELSE.

      rs_result_coverage-class_coverage-percent = 100.
      rs_result_coverage-class_coverage-count_total = 1.
      update_covered_value( CHANGING cs_coverage_values = rs_result_coverage-class_coverage ).

      rs_result_coverage-method_coverage-percent = is_source_coverage-proz_cnt_cum.
      rs_result_coverage-method_coverage-count_total = is_source_coverage-total.
      update_covered_value( CHANGING cs_coverage_values = rs_result_coverage-method_coverage ).

      rs_result_coverage-block_coverage-percent = is_source_coverage-proz_cnt_cum_brch.
      rs_result_coverage-block_coverage-count_total = is_source_coverage-branch_count.
      update_covered_value( CHANGING cs_coverage_values = rs_result_coverage-block_coverage ).

      rs_result_coverage-line_coverage-percent = is_source_coverage-proz_cnt_cum_st.
      rs_result_coverage-line_coverage-count_total = is_source_coverage-statement_count.
      update_covered_value( CHANGING cs_coverage_values = rs_result_coverage-line_coverage ).

    ENDIF.


  ENDMETHOD.                    &quot;extract_coverage</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="EXTRACT_COVERAGE_FROM_WUNIT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="16 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="EXTRACT_COVERAGE_FROM_WUNIT" SCONAME="IT_SOURCE_COVERAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CVT_WU"/>
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="EXTRACT_COVERAGE_FROM_WUNIT" SCONAME="RS_RESULT_COVERAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_S"/>
   <source>METHOD extract_coverage_from_wunit.

    DATA l_methods_count TYPE zcags_ci_code_coverage_val_s-count_total.
    DATA l_blocks_count TYPE zcags_ci_code_coverage_val_s-count_total.
    DATA l_statements_count TYPE zcags_ci_code_coverage_val_s-count_total.
    FIELD-SYMBOLS &lt;ls_source_coverage_details&gt; TYPE cvs_wu.

    CLEAR rs_result_coverage.

    LOOP AT it_source_coverage ASSIGNING &lt;ls_source_coverage_details&gt;.
      l_methods_count = l_methods_count + 1.
      l_blocks_count = l_blocks_count + &lt;ls_source_coverage_details&gt;-branch_count.
      l_statements_count = l_statements_count + &lt;ls_source_coverage_details&gt;-statement_count.
    ENDLOOP.

    rs_result_coverage-class_coverage-percent = 0.
    rs_result_coverage-class_coverage-count_total = 1.
    rs_result_coverage-class_coverage-count_covered = 0.

    rs_result_coverage-method_coverage-percent = 0.
    rs_result_coverage-method_coverage-count_covered = 0.
    rs_result_coverage-method_coverage-count_total = l_methods_count.

    rs_result_coverage-block_coverage-percent = 0.
    rs_result_coverage-block_coverage-count_covered = 0.
    rs_result_coverage-block_coverage-count_total = l_blocks_count.

    rs_result_coverage-line_coverage-percent = 0.
    rs_result_coverage-line_coverage-count_covered = 0.
    rs_result_coverage-line_coverage-count_total = l_statements_count.

  ENDMETHOD.                    &quot;extract_coverage_from_wunit</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="FREE_MEMORY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD free_memory.

    FREE MEMORY ID c_memory_id_class_cov.
    FREE MEMORY ID c_memory_id_cov_key.

  ENDMETHOD.                    &quot;FREE_MEMORY</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="GET_COVERAGE_KEY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="17 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="GET_COVERAGE_KEY" SCONAME="R_COVERAGE_KEY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="SAUNIT_D_COVERAGE_ANALYSIS_KEY"/>
   <source>METHOD get_coverage_key.

    r_coverage_key = m_coverage_key.

  ENDMETHOD.                    &quot;GET_COVERAGE_KEY</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="GET_COVERAGE_VALUES" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="23 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="GET_COVERAGE_VALUES" SCONAME="RT_COVERAGE_RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_TT"/>
   <source>METHOD get_coverage_values.

    rt_coverage_result = mt_class_level_coverage.

  ENDMETHOD.                    &quot;get_coverage_values</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="GET_INSTANCE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="GET_INSTANCE" SCONAME="RO_INSTANCE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_CAGS_CI_CODE_COVERAGE"/>
   <source>METHOD get_instance.

    IF ( mo_instance IS INITIAL ).
      CREATE OBJECT mo_instance.
      mo_instance-&gt;read_from_memory( ).
    ENDIF.

    ro_instance = mo_instance.

  ENDMETHOD.                    &quot;GET_INSTANCE</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="IS_COVERAGE_ENABLED" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="18 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="IS_COVERAGE_ENABLED" SCONAME="R_IS_ENABLED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>METHOD is_coverage_enabled.

    r_is_enabled = abap_true.&quot;zcl_cags_ci_report=&gt;get_instance( )-&gt;is_on( ).

  ENDMETHOD.                    &quot;IS_COVERAGE_ENABLED</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="READ_FROM_MEMORY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="19 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD read_from_memory.

    IMPORT class_coverage_table TO mt_class_level_coverage FROM MEMORY ID c_memory_id_class_cov.
    IMPORT coverage_key TO m_coverage_key FROM MEMORY ID c_memory_id_cov_key.

  ENDMETHOD.                    &quot;READ_FROM_MEMORY</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="SAVE_TO_MEMORY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="20 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD save_to_memory.

    EXPORT class_coverage_table FROM mt_class_level_coverage TO MEMORY ID c_memory_id_class_cov.
    EXPORT coverage_key FROM m_coverage_key TO MEMORY ID c_memory_id_cov_key.

  ENDMETHOD.                    &quot;save_to_memory</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="SET_COVERAGE_KEY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="21 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="SET_COVERAGE_KEY" SCONAME="I_COVERAGE_KEY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SAUNIT_D_COVERAGE_ANALYSIS_KEY"/>
   <source>METHOD set_coverage_key.

    m_coverage_key = i_coverage_key.

  ENDMETHOD.                    &quot;SET_COVERAGE_KEY</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="SET_INSTANCE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130402" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="731" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="SET_INSTANCE" SCONAME="IO_INSTANCE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130402" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_CAGS_CI_CODE_COVERAGE"/>
   <source>METHOD set_instance.

    mo_instance = io_instance.

  ENDMETHOD.                    &quot;GET_INSTANCE</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="UPDATE_COVERED_VALUE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="22 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_CODE_COVERAGE" CMPNAME="UPDATE_COVERED_VALUE" SCONAME="CS_COVERAGE_VALUES" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_VAL_S"/>
   <source>METHOD update_covered_value.

    cs_coverage_values-count_covered =
        cs_coverage_values-count_total * cs_coverage_values-percent / 100.

  ENDMETHOD.                    &quot;UPDATE_COVERED_VALUE</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_CAGS_CI_HTTP_REQ_HANDLER" VERSION="1" LANGU="E" DESCRIPT="Handle requests for CI framework" UUID="B499BAB2546E1EE2A5A608BBA1B55390" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="774888" CREATEDON="20130325" CHANGEDON="20130522" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="731" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <implementing CLSNAME="ZCL_CAGS_CI_HTTP_REQ_HANDLER" REFCLSNAME="ZIF_RESOURCE_HANDLER" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="774888" CREATEDON="20130325" CHANGEDON="20130522" RELTYPE="1" EDITORDER="1 "/>
  <publicSection>*----------------------------------------------------------------------*
*       CLASS zcl_cags_ci_http_req_handler DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS zcl_cags_ci_http_req_handler DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES zif_resource_handler .

    METHODS action_read_file
     IMPORTING
       i_file_path TYPE file_name
     RETURNING
       value(r_file_content) TYPE string.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <interfaceMethod CLSNAME="ZCL_CAGS_CI_HTTP_REQ_HANDLER" CPDNAME="ZIF_RESOURCE_HANDLER~HANDLE_DELETE">
   <source>METHOD zif_resource_handler~handle_delete.

  ENDMETHOD.                    &quot;zif_resource_handler~handle_delete</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCL_CAGS_CI_HTTP_REQ_HANDLER" CPDNAME="ZIF_RESOURCE_HANDLER~HANDLE_GET">
   <source>METHOD zif_resource_handler~handle_get.
    DATA l_param1       LIKE LINE OF it_params.
    DATA l_http_command TYPE string.
    DATA l_file_name    TYPE file_name.
    DATA lo_caught_exc  TYPE REF TO zcx_cags_ci_report_exception.
    DATA lo_ci_report   TYPE REF TO zcl_cags_ci_report.
    DATA l_command      TYPE string.
    DATA l_system       TYPE sy-sysid.
    DATA l_user         TYPE sy-uname.


    READ TABLE it_params INDEX 1 INTO l_param1.
    l_http_command = l_param1-value.

    TRY.
        lo_ci_report = zcl_cags_ci_report=&gt;get_instance( ).
        lo_ci_report-&gt;init_default_files_path( ).

        SPLIT l_http_command AT &apos;_&apos; INTO l_command l_system l_user.
        IF ( l_user IS INITIAL ).
          l_user = sy-uname.
        ENDIF.
        IF ( l_system IS INITIAL ).
          l_system = sy-sysid.
        ENDIF.

        CASE l_command.

          WHEN &apos;JOBRUN&apos; .

            IF ( l_system = &apos;D07&apos; ).
              CALL FUNCTION &apos;ZCAGS_CI_RUN_TESTS_BATCH&apos; DESTINATION &apos;D07CLI260&apos;
                EXPORTING
                  i_exec_user  = l_user
                IMPORTING
                  e_result_log = result-content.

            ELSEIF l_system = &apos;D87&apos;.

              CALL FUNCTION &apos;ZCAGS_CI_RUN_TESTS_BATCH&apos; DESTINATION &apos;D87CLI275&apos;
                EXPORTING
                  i_exec_user  = l_user
                IMPORTING
                  e_result_log = result-content.

            ELSE.

              CALL FUNCTION &apos;ZCAGS_CI_RUN_TESTS_BATCH&apos;
                EXPORTING
                  i_exec_user  = l_user
                IMPORTING
                  e_result_log = result-content.

            ENDIF.

          WHEN &apos;DELLOCK&apos;.

            lo_ci_report-&gt;unlock_run( l_system ).
            result-content = &apos;Run unlocked&apos;.

          WHEN &apos;DELFILES&apos;.

            lo_ci_report-&gt;delete_sap_files( l_system ).
            result-content = &apos;Files deleted&apos;.

          WHEN OTHERS.

            l_file_name = l_http_command.
            l_file_name = lo_ci_report-&gt;get_sap_dir( ) &amp;&amp; l_file_name.
            result-content = action_read_file( l_file_name ).

        ENDCASE.

        result-statuscode = 0.

      CATCH zcx_cags_ci_report_exception INTO lo_caught_exc.

        result-content = lo_caught_exc-&gt;get_msg_with_code( ).
        result-statuscode = 0.

      CATCH cx_root.

        result-content = &apos;CX_ROOT caught&apos;.
        result-statuscode = 1.

    ENDTRY.


  ENDMETHOD.                    &quot;zif_resource_handler~handle_get</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCL_CAGS_CI_HTTP_REQ_HANDLER" CPDNAME="ZIF_RESOURCE_HANDLER~HANDLE_POST">
   <source>METHOD zif_resource_handler~handle_post.

  ENDMETHOD.                    &quot;zif_resource_handler~handle_post</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCL_CAGS_CI_HTTP_REQ_HANDLER" CPDNAME="ZIF_RESOURCE_HANDLER~HANDLE_PUT">
   <source>METHOD zif_resource_handler~handle_put.

  ENDMETHOD.                    &quot;zif_resource_handler~handle_put</source>
  </interfaceMethod>
  <method CLSNAME="ZCL_CAGS_CI_HTTP_REQ_HANDLER" CMPNAME="ACTION_READ_FILE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130326" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_HTTP_REQ_HANDLER" CMPNAME="ACTION_READ_FILE" SCONAME="I_FILE_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130326" CHANGEDBY="774888" CHANGEDON="20130516" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FILE_NAME"/>
   <parameter CLSNAME="ZCL_CAGS_CI_HTTP_REQ_HANDLER" CMPNAME="ACTION_READ_FILE" SCONAME="R_FILE_CONTENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130516" CHANGEDBY="774888" CHANGEDON="20130516" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD action_read_file.

    DATA l_response TYPE string.
    DATA l_xml_content_line TYPE char255.

    OPEN DATASET i_file_path FOR INPUT IN TEXT MODE ENCODING DEFAULT WITH WINDOWS LINEFEED.

    IF ( sy-subrc &lt;&gt; 0 ).
      zcx_cags_ci_report_exception=&gt;raise_exception(
        i_code = sy-subrc
        i_msg =  &apos;ERROR: Cannot open file for response:&apos; &amp;&amp; i_file_path
      ).
    ENDIF.

    DO.

      READ DATASET i_file_path INTO l_xml_content_line.

      l_response = l_response &amp;&amp; l_xml_content_line.

      IF ( sy-subrc &lt;&gt; 0 ).
        EXIT.
      ENDIF.

    ENDDO.

    CLOSE DATASET i_file_path.

    r_file_content = l_response.

  ENDMETHOD.                    &quot;action_get_file</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_CAGS_CI_METADATA_DAO" VERSION="1" LANGU="E" DESCRIPT="DAO for metadata like user, package, class etc." UUID="B499BAB2546E1EE2A5A5FA5F3E265390" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="774888" CREATEDON="20130325" CHANGEDON="20131020" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="731" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <types CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="MT_CHAR" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" TYPTYPE="4" SRCROW1="5 " SRCCOLUMN1="10 " SRCROW2="5 " SRCCOLUMN2="35 " TYPESRC_LENG="28 " TYPESRC="mt_char TYPE TABLE OF ausp
"/>
  <types CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="LT_EQUIP_FUNC_LOC" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" TYPTYPE="4" SRCROW1="8 " SRCCOLUMN1="11 " SRCROW2="8 " SRCCOLUMN2="85 " TYPESRC_LENG="77 " TYPESRC="lt_equip_func_loc TYPE SORTED TABLE OF equz WITH NON-UNIQUE KEY equnr aedat
"/>
  <publicSection>*----------------------------------------------------------------------*
*       CLASS ZCL_CAGS_CI_METADATA_DAO DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS zcl_cags_ci_metadata_dao DEFINITION
  PUBLIC
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS constructor.

    CLASS-METHODS get_instance
    RETURNING value(ro_instance) TYPE REF TO zcl_cags_ci_metadata_dao.

    METHODS find_class_user
      IMPORTING
        !i_class_name TYPE string
      RETURNING
        value(r_class_author_user) TYPE uname .
    METHODS find_class_package_full_path
      IMPORTING
        !i_class_name TYPE string
      RETURNING
        value(r_class_package) TYPE string .
    METHODS find_full_package_path
      IMPORTING
        !i_package_name TYPE zcags_ci_code_coverage_s-package
      RETURNING
        value(r_package_full_path) TYPE string .
    TYPE-POOLS abap .
    METHODS find_class_metadata
      IMPORTING
        !i_class_name TYPE zcags_ci_code_coverage_s-name
        !i_package TYPE zcags_ci_code_coverage_s-parent_object
      EXPORTING
        !e_user TYPE zcags_ci_code_coverage_s-user
        !e_is_deleted TYPE abap_bool .
    METHODS find_custom_root_packages
      RETURNING
        value(rt_root_packages) TYPE tr_devclasses .

    METHODS find_sap_coverage_results
      IMPORTING
        i_coverage_key TYPE saunit_d_coverage_analysis_key
      RETURNING
        value(rt_sap_coverage_result) TYPE cvt_propro_tkey.

    METHODS find_full_package_path_child
        IMPORTING
          !i_package_name TYPE zcags_ci_code_coverage_s-package
        RETURNING
          value(r_package_full_path) TYPE string .

    CLASS-METHODS set_instance
      IMPORTING
        io_dao_instance TYPE REF TO zcl_cags_ci_metadata_dao.


    METHODS find_class_update_user
      IMPORTING
        i_class_name TYPE string
      RETURNING
        value(r_last_update_class_user) TYPE sy-uname.

    METHODS extract_global_class_unit_test
      IMPORTING
        i_class_with_unit_test_name TYPE string
      RETURNING
        value(r_global_class_name) TYPE string.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.

    CLASS-DATA mo_instance TYPE REF TO zcl_cags_ci_metadata_dao.

    TYPES mt_char TYPE TABLE OF ausp.
    DATA lt_my_table TYPE mt_char.

    TYPES  lt_equip_func_loc TYPE SORTED TABLE OF equz WITH NON-UNIQUE KEY equnr aedat.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCL_CAGS_CI_METADATA_DAO" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" EXPLICIT="X" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="LT_MY_TABLE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="MT_CHAR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="MO_INSTANCE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_CAGS_CI_METADATA_DAO" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD constructor.

  ENDMETHOD.                    &quot;constructor</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="EXTRACT_GLOBAL_CLASS_UNIT_TEST" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="12 " DISPID="0 " AUTHOR="774888" CREATEDON="20130910" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="EXTRACT_GLOBAL_CLASS_UNIT_TEST" SCONAME="I_CLASS_WITH_UNIT_TEST_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130910" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="EXTRACT_GLOBAL_CLASS_UNIT_TEST" SCONAME="R_GLOBAL_CLASS_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130910" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD extract_global_class_unit_test.

    DATA l_global_class_name TYPE string.
    DATA l_local_class_name TYPE string.
    SPLIT i_class_with_unit_test_name AT &apos;~&apos; INTO l_global_class_name l_local_class_name.
    r_global_class_name = l_global_class_name.

  ENDMETHOD.                    &quot;extract_global_class_unit_test</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_METADATA" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_METADATA" SCONAME="I_CLASS_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_S-NAME"/>
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_METADATA" SCONAME="I_PACKAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_S-PARENT_OBJECT"/>
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_METADATA" SCONAME="E_USER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_S-USER"/>
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_METADATA" SCONAME="E_IS_DELETED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>METHOD find_class_metadata.


    DATA l_class_name TYPE seoclass-clsname.
    DATA ls_class_details TYPE tadir.
    l_class_name = i_class_name.

    SELECT SINGLE * FROM tadir INTO ls_class_details WHERE devclass = i_package AND obj_name = i_class_name.

    e_user = ls_class_details-author.

    IF e_user IS INITIAL.
      e_user = &apos;UNKNOWN&apos;.
    ENDIF.

    e_is_deleted = ls_class_details-delflag.

  ENDMETHOD.                    &quot;FIND_CLASS_METADATA</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_PACKAGE_FULL_PATH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_PACKAGE_FULL_PATH" SCONAME="I_CLASS_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_PACKAGE_FULL_PATH" SCONAME="R_CLASS_PACKAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD find_class_package_full_path.

    DATA ls_class_details TYPE tadir.
    DATA l_package_name TYPE zcags_ci_code_coverage_s-package.
    DATA l_full_package_path TYPE string.

    SELECT SINGLE * FROM tadir INTO ls_class_details WHERE obj_name = i_class_name.

    IF ( sy-subrc = 0 ).
      l_package_name = ls_class_details-devclass.
      l_full_package_path = find_full_package_path( l_package_name ).
      r_class_package = l_full_package_path.
    ELSE.
      CLEAR r_class_package.
    ENDIF.

    IF ( r_class_package IS INITIAL ).
      r_class_package = &apos;PACKAGE_UNKNOWN&apos;.
    ENDIF.

  ENDMETHOD.                    &quot;FIND_CLASS_PACKAGE_FULL_PATH</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_UPDATE_USER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " AUTHOR="774888" CREATEDON="20130906" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_UPDATE_USER" SCONAME="I_CLASS_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130906" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_UPDATE_USER" SCONAME="R_LAST_UPDATE_CLASS_USER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130906" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-UNAME"/>
   <source>METHOD find_class_update_user.

    DATA ls_user_change_data TYPE reposrc.
    DATA l_program_name_parttern TYPE string.
    DATA l_program_cp_to_ignore TYPE reposrc-progname.

    &quot; Find exact name if program and not class
    SELECT * FROM reposrc
        INTO ls_user_change_data
          WHERE progname = i_class_name AND r3state = &apos;A&apos;
            ORDER BY udat DESCENDING utime DESCENDING.
      r_last_update_class_user = ls_user_change_data-unam.
      EXIT.
    ENDSELECT.

    IF ( r_last_update_class_user IS INITIAL ).
      &quot; use class pattern if exact name not found

      l_program_name_parttern = i_class_name.

      WHILE strlen( l_program_name_parttern ) &lt; 30.
        CONCATENATE  l_program_name_parttern &apos;=&apos; INTO l_program_name_parttern.
      ENDWHILE.

      l_program_cp_to_ignore = l_program_name_parttern &amp;&amp; &apos;CP&apos;.
      l_program_name_parttern = l_program_name_parttern &amp;&amp; &apos;%&apos;.

      SELECT * FROM reposrc &quot;progdir
        INTO ls_user_change_data
          WHERE progname LIKE l_program_name_parttern AND r3state = &apos;A&apos;
            ORDER BY udat DESCENDING utime DESCENDING.
        IF ( ls_user_change_data-progname &lt;&gt; l_program_cp_to_ignore ).
          r_last_update_class_user = ls_user_change_data-unam.
          EXIT.
        ENDIF.
      ENDSELECT.
    ENDIF.

  ENDMETHOD.                    &quot;find_class_update_user</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_USER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_USER" SCONAME="I_CLASS_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_USER" SCONAME="R_CLASS_AUTHOR_USER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="UNAME"/>
   <source>METHOD find_class_user.

    DATA l_class_name TYPE seoclass-clsname.
    DATA ls_class_details TYPE tadir.

    l_class_name = i_class_name.

    SELECT SINGLE * FROM tadir INTO ls_class_details WHERE obj_name = i_class_name.

    r_class_author_user = ls_class_details-author.

    IF r_class_author_user IS INITIAL.
      r_class_author_user = &apos;UNKNOWN&apos;.
    ENDIF.

  ENDMETHOD.                    &quot;FIND_CLASS_USER</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CUSTOM_ROOT_PACKAGES" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CUSTOM_ROOT_PACKAGES" SCONAME="RT_ROOT_PACKAGES" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="TR_DEVCLASSES"/>
   <source>METHOD find_custom_root_packages.

    DATA lt_root_packages TYPE tr_devclasses.
    SELECT devclass FROM tdevc INTO TABLE lt_root_packages WHERE parentcl = &apos;&apos; AND ( devclass LIKE &apos;Z%&apos; OR devclass LIKE &apos;Y%&apos; ).

    rt_root_packages = lt_root_packages.

  ENDMETHOD.                    &quot;FIND_CUSTOM_ROOT_PACKAGES</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_FULL_PACKAGE_PATH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_FULL_PACKAGE_PATH" SCONAME="I_PACKAGE_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_S-PACKAGE"/>
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_FULL_PACKAGE_PATH" SCONAME="R_PACKAGE_FULL_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD find_full_package_path.

    DATA l_parent_package TYPE string.
    DATA l_package_full_path TYPE string.
    DATA l_parent_package_may_exist TYPE abap_bool VALUE abap_true.
    l_package_full_path = i_package_name.

    l_parent_package = i_package_name.

    WHILE ( l_parent_package_may_exist = abap_true ).

      SELECT SINGLE parentcl FROM tdevc INTO l_parent_package WHERE devclass = l_parent_package.

      IF ( sy-subrc &lt;&gt; 0 OR l_parent_package IS INITIAL ).

        l_parent_package_may_exist = abap_false.

      ELSE.

        l_package_full_path = l_parent_package &amp;&amp; &apos;.&apos; &amp;&amp; l_package_full_path.

      ENDIF.

    ENDWHILE.

    r_package_full_path = l_package_full_path.

  ENDMETHOD.                    &quot;FIND_FULL_PACKAGE_PATH</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_FULL_PACKAGE_PATH_CHILD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_FULL_PACKAGE_PATH_CHILD" SCONAME="I_PACKAGE_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_S-PACKAGE"/>
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_FULL_PACKAGE_PATH_CHILD" SCONAME="R_PACKAGE_FULL_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD find_full_package_path_child.

    DATA l_child_package TYPE string.
    DATA l_last_package TYPE string.
    DATA l_package_full_path TYPE string.
    DATA l_child_package_may_exist TYPE abap_bool VALUE abap_true.
    l_package_full_path = i_package_name.

    l_last_package = i_package_name.

    WHILE ( l_child_package_may_exist = abap_true ).
      l_child_package_may_exist = abap_false.
      &quot;SELECT SINGLE parentcl FROM tdevc INTO l_child_package WHERE devclass = l_child_package.
      SELECT devclass FROM tdevc INTO l_child_package WHERE parentcl = l_last_package.

        IF ( sy-subrc &lt;&gt; 0 OR l_child_package IS NOT INITIAL ).

          l_child_package_may_exist = abap_true.

        ELSE.

          &quot;l_package_full_path = l_child_package &amp;&amp; &apos;.&apos; &amp;&amp; l_package_full_path.
          l_package_full_path = l_package_full_path &amp;&amp; &apos;.&apos; &amp;&amp; l_child_package.

        ENDIF.

      ENDSELECT.

    ENDWHILE.

    r_package_full_path = l_package_full_path.

  ENDMETHOD.                    &quot;FIND_FULL_PACKAGE_PATH</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_SAP_COVERAGE_RESULTS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_SAP_COVERAGE_RESULTS" SCONAME="I_COVERAGE_KEY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SAUNIT_D_COVERAGE_ANALYSIS_KEY"/>
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_SAP_COVERAGE_RESULTS" SCONAME="RT_SAP_COVERAGE_RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="CVT_PROPRO_TKEY"/>
   <source>METHOD find_sap_coverage_results.

    DATA:
      lt_devc_ranges        TYPE cvt_sodev,
      lt_devc_range         LIKE LINE OF lt_devc_ranges,
      lt_prog_ranges        TYPE cvt_sopro,
      lt_prog_range         LIKE LINE OF lt_prog_ranges,
      lt_sap_coverage_result TYPE cvt_propro_tkey.


    &quot; retrieval via testkey - this is different to other access strategy
    &quot; as not touched programs will not be included into the result set
    cl_coverage_access=&gt;get_prog_display_by_tky(
      EXPORTING
        im_tkey =       i_coverage_key
        im_prog_select = lt_prog_ranges
        im_devc_select = lt_devc_ranges
        im_red_yel =     &apos;25&apos;
        im_yel_gre =     &apos;75&apos;
      IMPORTING
        ex_prog_res =    rt_sap_coverage_result ).

  ENDMETHOD.                    &quot;find_sap_coverage_results</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="GET_INSTANCE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="GET_INSTANCE" SCONAME="RO_INSTANCE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_CAGS_CI_METADATA_DAO"/>
   <source>METHOD get_instance.

    IF ( mo_instance IS INITIAL ).
      CREATE OBJECT mo_instance.
    ENDIF.
    ro_instance = mo_instance.

  ENDMETHOD.                    &quot;get_instance</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="SET_INSTANCE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="SET_INSTANCE" SCONAME="IO_DAO_INSTANCE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130910" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_CAGS_CI_METADATA_DAO"/>
   <source>METHOD set_instance.

    mo_instance = io_dao_instance.

  ENDMETHOD.                    &quot;set_instance</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_CAGS_CI_METADATA_DAO_MOCK" VERSION="1" LANGU="E" DESCRIPT="Mock global class for metadata" UUID="B499BAB2546E1ED2AAE97155EF068A10" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="774888" CREATEDON="20130422" CHANGEDON="20130522" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="731" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZCL_CAGS_CI_METADATA_DAO" CHANGEDBY="774888">
  <publicSection>*----------------------------------------------------------------------*
*       CLASS zcl_cags_ci_metadata_dao_mock DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS zcl_cags_ci_metadata_dao_mock DEFINITION INHERITING FROM zcl_cags_ci_metadata_dao
  PUBLIC
  CREATE PUBLIC .

  PUBLIC SECTION.

    CONSTANTS c_test_coverage_key1 TYPE saunit_d_coverage_analysis_key VALUE &apos;CKEY&apos;.
    CONSTANTS c_test_coverage_user1 TYPE sy-uname VALUE &apos;USER_01&apos;.
    CONSTANTS c_test_coverage_package1 TYPE zcags_ci_code_coverage_s-parent_object VALUE &apos;PACKAGE_01&apos;.
    CONSTANTS c_test_coverage_object1 TYPE zcags_ci_code_coverage_s-name VALUE &apos;ZCL_TEST_CLASS_NAME&apos;.

    METHODS find_class_user REDEFINITION.

    METHODS find_class_PACKAGE_full_path REDEFINITION.

    METHODS find_full_PACKAGE_path REDEFINITION.

    METHODS find_class_metadata REDEFINITION.

    METHODS find_custom_root_packages REDEFINITION.

    METHODS find_sap_coverage_results REDEFINITION.

    METHODS find_full_PACKAGE_path_child REDEFINITION.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZCL_CAGS_CI_METADATA_DAO_MOCK" CMPNAME="C_TEST_COVERAGE_KEY1" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="774888" CREATEDON="20130422" CHANGEDBY="774888" CHANGEDON="20130522" ATTDECLTYP="2" ATTVALUE="&apos;CKEY&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SAUNIT_D_COVERAGE_ANALYSIS_KEY" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_METADATA_DAO_MOCK" CMPNAME="C_TEST_COVERAGE_OBJECT1" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="774888" CREATEDON="20130422" CHANGEDBY="774888" CHANGEDON="20130522" ATTDECLTYP="2" ATTVALUE="&apos;ZCL_TEST_CLASS_NAME&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_S-NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_METADATA_DAO_MOCK" CMPNAME="C_TEST_COVERAGE_PACKAGE1" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="774888" CREATEDON="20130422" CHANGEDBY="774888" CHANGEDON="20130522" ATTDECLTYP="2" ATTVALUE="&apos;PACKAGE_01&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZCAGS_CI_CODE_COVERAGE_S-PARENT_OBJECT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_METADATA_DAO_MOCK" CMPNAME="C_TEST_COVERAGE_USER1" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="774888" CREATEDON="20130422" CHANGEDBY="774888" CHANGEDON="20130522" ATTDECLTYP="2" ATTVALUE="&apos;USER_01&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UNAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCL_CAGS_CI_METADATA_DAO_MOCK" REFCLSNAME="ZCL_CAGS_CI_METADATA_DAO" VERSION="1" STATE="1" AUTHOR="774888" CREATEDON="20130422" CHANGEDBY="774888" CHANGEDON="20130522">
   <redefinition CLSNAME="ZCL_CAGS_CI_METADATA_DAO_MOCK" REFCLSNAME="ZCL_CAGS_CI_METADATA_DAO" VERSION="1" MTDNAME="FIND_CLASS_METADATA" EXPOSURE="2"/>
   <redefinition CLSNAME="ZCL_CAGS_CI_METADATA_DAO_MOCK" REFCLSNAME="ZCL_CAGS_CI_METADATA_DAO" VERSION="1" MTDNAME="FIND_CLASS_PACKAGE_FULL_PATH" EXPOSURE="2"/>
   <redefinition CLSNAME="ZCL_CAGS_CI_METADATA_DAO_MOCK" REFCLSNAME="ZCL_CAGS_CI_METADATA_DAO" VERSION="1" MTDNAME="FIND_CLASS_USER" EXPOSURE="2"/>
   <redefinition CLSNAME="ZCL_CAGS_CI_METADATA_DAO_MOCK" REFCLSNAME="ZCL_CAGS_CI_METADATA_DAO" VERSION="1" MTDNAME="FIND_CUSTOM_ROOT_PACKAGES" EXPOSURE="2"/>
   <redefinition CLSNAME="ZCL_CAGS_CI_METADATA_DAO_MOCK" REFCLSNAME="ZCL_CAGS_CI_METADATA_DAO" VERSION="1" MTDNAME="FIND_FULL_PACKAGE_PATH" EXPOSURE="2"/>
   <redefinition CLSNAME="ZCL_CAGS_CI_METADATA_DAO_MOCK" REFCLSNAME="ZCL_CAGS_CI_METADATA_DAO" VERSION="1" MTDNAME="FIND_FULL_PACKAGE_PATH_CHILD" EXPOSURE="2"/>
   <redefinition CLSNAME="ZCL_CAGS_CI_METADATA_DAO_MOCK" REFCLSNAME="ZCL_CAGS_CI_METADATA_DAO" VERSION="1" MTDNAME="FIND_SAP_COVERAGE_RESULTS" EXPOSURE="2"/>
  </inheritance>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_METADATA" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD find_class_metadata.

    DATA l_class_name TYPE seoclass-clsname.

    IF ( i_class_name = c_test_coverage_object1 AND i_package = c_test_coverage_package1 ).

      e_user = c_test_coverage_user1.
      e_is_deleted = abap_false.

    ENDIF.

  ENDMETHOD.                    &quot;find_class_metadata</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_PACKAGE_FULL_PATH" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD find_class_PACKAGE_full_path.

    IF ( i_class_name = &apos;ZCL_TEST_CLASS1&apos; OR i_class_name = &apos;ZCL_TEST_CLASS2&apos; ).
      r_class_package = &apos;TEST.PACKAGE_1&apos;.
    ELSEIF ( i_class_name = &apos;ZCL_TEST_CLASS3&apos; ).
      r_class_package = &apos;TEST.PACKAGE_3&apos;.
    ENDIF.

  ENDMETHOD.                    &quot;find_class_PACKAGE_full_path</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CLASS_USER" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD find_class_user.
    IF ( i_class_name = &apos;ZCL_TEST_CLASS1&apos; OR i_class_name = &apos;ZCL_TEST_CLASS2&apos; ).
      r_class_author_user = &apos;TEST_USER1&apos;.
    ELSEIF ( i_class_name = &apos;ZCL_TEST_CLASS3&apos; ).
      r_class_author_user = &apos;TEST_USER3&apos;.
    ENDIF.
  ENDMETHOD.                    &quot;find_class_user</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_CUSTOM_ROOT_PACKAGES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD find_custom_root_packages.

  ENDMETHOD.                    &quot;find_custom_root_packages</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_FULL_PACKAGE_PATH" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD find_full_PACKAGE_path.
    IF ( i_PACKAGE_name = &apos;PACKAGE_1&apos; OR i_PACKAGE_name = &apos;PACKAGE_3&apos; ).
      r_PACKAGE_full_path = &apos;TEST.&apos; &amp;&amp; i_PACKAGE_name.
    ENDIF.

  ENDMETHOD.                    &quot;find_full_PACKAGE_path</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_FULL_PACKAGE_PATH_CHILD" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD find_full_PACKAGE_path_child.

  ENDMETHOD.                    &quot;find_full_PACKAGE_path_child</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_METADATA_DAO" CMPNAME="FIND_SAP_COVERAGE_RESULTS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD find_sap_coverage_results.

    IF ( i_coverage_key = c_test_coverage_key1 ).

      DATA lt_sap_coverage_results  TYPE cvt_propro_tkey.
      DATA ls_sap_coverage_result   TYPE cvs_propro_tkey.

      ls_sap_coverage_result-obj_name = &apos;SAP_BUT_NOT_CUST_OBJ&apos;.
      APPEND ls_sap_coverage_result TO lt_sap_coverage_results.

      CLEAR ls_sap_coverage_result.
      ls_sap_coverage_result-devclass = c_test_coverage_package1.
      ls_sap_coverage_result-obj_name = c_test_coverage_object1.
      ls_sap_coverage_result-proz_cnt_cum = &apos;2&apos;.    &quot; method coverage percent
      ls_sap_coverage_result-total        = &apos;200&apos;.  &quot; methods total count
      ls_sap_coverage_result-proz_cnt_cum_brch = &apos;3&apos;. &quot; blocks coverage percent
      ls_sap_coverage_result-branch_count = &apos;300&apos;.    &quot; blocks coverage total amount
      ls_sap_coverage_result-proz_cnt_cum_st = &apos;4&apos;.  &quot; statements/lines coverage percent
      ls_sap_coverage_result-statement_count = &apos;400&apos;. &quot; statements/lines total amount in coverage

      APPEND ls_sap_coverage_result TO lt_sap_coverage_results.

      rt_sap_coverage_result = lt_sap_coverage_results.

    ENDIF.

  ENDMETHOD.                    &quot;find_sap_coverage_results</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_CAGS_CI_REPORT" VERSION="1" LANGU="E" DESCRIPT="Main report class for CI Unit Tests" UUID="B499BAB2546E1EE2A5A5FD3836755390" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="774888" CREATEDON="20130325" CHANGEDON="20131020" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="731" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>*----------------------------------------------------------------------*
*       CLASS ZCL_CAGS_CI_REPORT DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
*       CLASS zcl_cags_ci_report DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS zcl_cags_ci_report DEFINITION
  PUBLIC
  CREATE PUBLIC .

  PUBLIC SECTION.

    CONSTANTS c_default_server_dir TYPE string VALUE &apos;\\SAP-IFACE01.ST.STATOIL.NO\TRANS\ERPDEV\&apos;.
    CONSTANTS c_deflt_coverage_user_file    TYPE file_name VALUE &apos;CI_ABAP_COVERAGE_USER.XML&apos;.
    CONSTANTS c_deflt_coverage_package_file TYPE file_name VALUE &apos;CI_ABAP_COVERAGE_PACKAGE.XML&apos;.
    CONSTANTS c_deflt_test_package_file     TYPE file_name VALUE &apos;CI_ABAP_UNIT_PACKAGE.XML&apos;.
    CONSTANTS c_deflt_test_user_file        TYPE file_name VALUE &apos;CI_ABAP_UNIT_USER.XML&apos;.

    CONSTANTS: c_batch_jobname    TYPE btcjob VALUE &apos;AUTO_ZCAGS_CI_REPORT&apos;.
    CONSTANTS: c_default_variant  TYPE char20 VALUE &apos;HTTP_DEFAULT&apos;.

    CLASS-METHODS get_instance
      RETURNING
        value(ro_singleton_instance) TYPE REF TO zcl_cags_ci_report .
    TYPE-POOLS abap .

    CLASS-METHODS free_config_memory.


    METHODS constructor.

    METHODS init
         IMPORTING
           !i_is_report_run TYPE abap_bool OPTIONAL
           !i_classes_coverage_only TYPE abap_bool OPTIONAL
           !i_group_by_user TYPE abap_bool OPTIONAL
           !i_group_by_package TYPE abap_bool OPTIONAL
           !i_test_user_file TYPE string OPTIONAL
           !i_test_package_file TYPE string OPTIONAL
           !i_coverage_user_file TYPE string OPTIONAL
           !i_coverage_package_file TYPE string OPTIONAL
           !i_local_sap_dir TYPE string OPTIONAL
           !i_remote_dir TYPE string OPTIONAL
           !i_email_for_failures TYPE abap_bool OPTIONAL.

    METHODS is_on
      RETURNING
        value(r_is_on) TYPE abap_bool .

    METHODS is_coverage_only_for_classes
      RETURNING
        value(r_only_classes) TYPE abap_bool .

    METHODS read_from_memory .

    METHODS save_to_memory .

    METHODS get_configuration
      RETURNING value(rs_configuration) TYPE zcags_ci_configuration.

    METHODS update_final_coverage_results
      RETURNING value(ro_coverage_results) TYPE REF TO zcl_cags_ci_code_coverage.

    METHODS update_final_tests_results
      IMPORTING it_sap_programs_test_result TYPE if_saunit_internal_result_type=&gt;ty_t_programs
      RETURNING value(ro_test_data) TYPE REF TO zcl_cags_ci_test_data.

    METHODS is_customized_name
      IMPORTING
        !i_object_name TYPE string
         RETURNING
      value(r_is_customized_name) TYPE abap_bool .

    METHODS save_to_local_sap_dir
        IMPORTING
          i_filepath            TYPE file_name
          it_file_content_lines TYPE tchar255.

    METHODS transfer_data_to_hudson
       IMPORTING
          i_remote_file_path TYPE file_name
       CHANGING
         it_file_content_lines TYPE tchar255
         .

    METHODS concatenate_file_dir_to_path
     IMPORTING i_file_name TYPE file_name
               i_dir_path  TYPE file_name
     RETURNING value(r_file_path) TYPE file_name.

    METHODS update_summary_save_files
      IMPORTING it_sap_programs_test_result TYPE if_saunit_internal_result_type=&gt;ty_t_programs.

    METHODS lock_run.

    METHODS unlock_run
      IMPORTING i_system_id TYPE sy-sysid DEFAULT sy-sysid.

    METHODS is_run_lock_file
     RETURNING
       value(r_lock_file_found) TYPE abap_bool.

    METHODS check_if_test_file_exists
      IMPORTING
        i_file_name TYPE string
      RETURNING
        value(r_result) TYPE abap_bool.

    METHODS create_sap_file_path
      IMPORTING
        i_file_name TYPE file_name
        i_system_id TYPE sy-sysid DEFAULT sy-sysid
      RETURNING
        value(r_file_full_path) TYPE file_name.

    METHODS create_hudson_file_path
      IMPORTING
        i_file_name TYPE file_name
      RETURNING
        value(r_file_full_path) TYPE file_name.

    CLASS-METHODS delete_file
          IMPORTING
            i_file_path TYPE string.

    METHODS delete_sap_files
      IMPORTING
        i_system_id TYPE sy-sysid DEFAULT sy-sysid.

    METHODS init_default_files_path.

    METHODS get_sap_dir
      RETURNING value(r_dirpath) TYPE file_name.

    METHODS run_unit_tests_default_variant.

    METHODS send_email_for_failures
     IMPORTING
       io_test_results TYPE REF TO zcl_cags_ci_test_data.

    METHODS send_email_to_user
      IMPORTING
        i_user              TYPE sy-uname
        i_failed_class_name TYPE zcags_ci_unit_method_s-class_name.

    METHODS set_report_exec_user
      IMPORTING i_user      TYPE sy-uname DEFAULT &apos;123456&apos;.

 DATA: m_report_exec_user TYPE sy-uname VALUE &apos;774888&apos;.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.


    CONSTANTS c_memory_configuration_id   TYPE char32 VALUE &apos;ZCL_CAGS_CI_REPORT-CONFIGURATION&apos;.
    CLASS-DATA m_memory_configuration_id  TYPE char40 VALUE &apos;ZCL_CAGS_CI_REPORT-CONFIGURATION&apos;.

    CONSTANTS c_file_lock_suffix TYPE file_name VALUE &apos;run.lock&apos;.

    CLASS-DATA mo_singleton_instance TYPE REF TO zcl_cags_ci_report .
    CLASS-DATA mo_metadata_dao TYPE REF TO zcl_cags_ci_metadata_dao.

    DATA ms_report_configuration TYPE zcags_ci_configuration.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations
CLASS lcl_ci_test_data_mock DEFINITION inheriting from zcl_cags_ci_test_data.
public section.

 TYPES BEGIN OF lty_method_call_details.
  TYPES !class_name TYPE string.
  TYPES !local_test_class TYPE string.
  TYPES !method_name TYPE string.
  TYPES !alert_info TYPE string .
  TYPES END OF lty_method_call_details.


  methods add_failed_method FINAL redefinition.

  methods add_test_method FINAL redefinition.

  methods get_first_failed_method
    RETURNING VALUE(rs_methods) TYPE lty_method_call_details.

  methods get_first_success_method
  RETURNING VALUE(rs_methods) TYPE lty_method_call_details.

PRIVATE SECTION.



  DATA mt_failed_methods TYPE table of lty_method_call_details .
  DATA mt_success_methods TYPE table of  lty_method_call_details.
  DATA ms_method TYPE lty_method_call_details.



ENDCLASS.

CLASS lcl_ci_test_data_mock implementation.

  method add_failed_method.

    clear ms_method.
    ms_method-class_name = i_class_name.
    ms_method-local_test_class = i_local_test_class.
    ms_method-method_name = i_method_name.
    ms_method-alert_info = i_alert_msg.
    APPEND ms_method to mt_failed_methods.

  endmethod.

  METHOD add_test_method.

    CLEAR ms_method.
    ms_method-class_name = i_class_name.
    ms_method-local_test_class = i_local_test_class.
    ms_method-method_name = i_method_name.
    APPEND ms_method TO mt_success_methods.

  ENDMETHOD.


  METHOD get_first_failed_method.
  clear ms_method.
  READ TABLE mt_failed_methods INDEX 1 into ms_method.
    rs_methods = ms_method.
  ENDMETHOD.

  METHOD get_first_success_method.
    CLEAR ms_method.
    READ TABLE mt_success_methods INDEX 1 INTO ms_method.
    rs_methods = ms_method.
  ENDMETHOD.
endclass.</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCL_CAGS_CI_REPORT" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" EXPLICIT="X" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="C_BATCH_JOBNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="774888" CREATEDON="20130516" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="2" ATTVALUE="&apos;AUTO_ZCAGS_CI_REPORT&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BTCJOB" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="C_DEFAULT_SERVER_DIR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="2" ATTVALUE="&apos;\\SAP-IFACE01.ST.STATOIL.NO\TRANS\ERPDEV\&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="C_DEFAULT_VARIANT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="774888" CREATEDON="20130516" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="2" ATTVALUE="&apos;HTTP_DEFAULT&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR20" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="C_DEFLT_COVERAGE_PACKAGE_FILE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="2" ATTVALUE="&apos;CI_ABAP_COVERAGE_PACKAGE.XML&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="FILE_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="C_DEFLT_COVERAGE_USER_FILE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="2" ATTVALUE="&apos;CI_ABAP_COVERAGE_USER.XML&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="FILE_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="C_DEFLT_TEST_PACKAGE_FILE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="2" ATTVALUE="&apos;CI_ABAP_UNIT_PACKAGE.XML&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="FILE_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="C_DEFLT_TEST_USER_FILE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="2" ATTVALUE="&apos;CI_ABAP_UNIT_USER.XML&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="FILE_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="C_FILE_LOCK_SUFFIX" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="774888" CREATEDON="20130326" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="2" ATTVALUE="&apos;run.lock&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="FILE_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="C_MEMORY_CONFIGURATION_ID" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="774888" CREATEDON="20130326" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="2" ATTVALUE="&apos;ZCL_CAGS_CI_REPORT-CONFIGURATION&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR32" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="MO_METADATA_DAO" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="5 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_CAGS_CI_METADATA_DAO" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="MO_SINGLETON_INSTANCE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_CAGS_CI_REPORT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="MS_REPORT_CONFIGURATION" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="6 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZCAGS_CI_CONFIGURATION" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="M_MEMORY_CONFIGURATION_ID" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="774888" CREATEDON="20130326" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="1" ATTVALUE="&apos;ZCL_CAGS_CI_REPORT-CONFIGURATION&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR40" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="M_REPORT_EXEC_USER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " AUTHOR="774888" CREATEDON="20131008" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="0" ATTVALUE="&apos;774888&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-UNAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CHECK_IF_TEST_FILE_EXISTS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="20 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CHECK_IF_TEST_FILE_EXISTS" SCONAME="I_FILE_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CHECK_IF_TEST_FILE_EXISTS" SCONAME="R_RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>METHOD check_if_test_file_exists.

    r_result = abap_false.
    OPEN DATASET i_file_name FOR INPUT IN TEXT MODE ENCODING DEFAULT WITH WINDOWS LINEFEED.
    IF ( sy-subrc = 0 ).
      r_result = abap_true.
    ENDIF.

  ENDMETHOD.                    &quot;check_if_test_file_exists</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CONCATENATE_FILE_DIR_TO_PATH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="15 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CONCATENATE_FILE_DIR_TO_PATH" SCONAME="I_FILE_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FILE_NAME"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CONCATENATE_FILE_DIR_TO_PATH" SCONAME="I_DIR_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FILE_NAME"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CONCATENATE_FILE_DIR_TO_PATH" SCONAME="R_FILE_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FILE_NAME"/>
   <source>METHOD concatenate_file_dir_to_path.

    DATA l_dir_length TYPE i.
    DATA l_dir_last_char_pos TYPE i.
    DATA l_last_char TYPE char1.
    DATA l_dir_formatted TYPE string.
    l_dir_length = strlen( i_dir_path ).

    IF ( l_dir_length &gt; 0 ).
      l_dir_last_char_pos = l_dir_length - 1.
      l_last_char = i_dir_path+l_dir_last_char_pos(1).
      IF ( l_last_char &lt;&gt; &apos;\&apos;  AND l_last_char &lt;&gt; &apos;/&apos; ).
        l_dir_formatted = i_dir_path &amp;&amp; &apos;\&apos;.
      ELSE.
        l_dir_formatted = i_dir_path.
      ENDIF.
    ELSE.
      l_dir_formatted = i_dir_path.
    ENDIF.

    r_file_path = l_dir_formatted &amp;&amp; i_file_name.

  ENDMETHOD.                    &quot;concatenate_file_dir_to_path</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD constructor.

    mo_metadata_dao = zcl_cags_ci_metadata_dao=&gt;get_instance( ).

    m_memory_configuration_id = c_memory_configuration_id &amp;&amp; sy-sysid.
    m_report_exec_user = sy-uname.

  ENDMETHOD.                    &quot;constructor</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CREATE_HUDSON_FILE_PATH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="22 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CREATE_HUDSON_FILE_PATH" SCONAME="I_FILE_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FILE_NAME"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CREATE_HUDSON_FILE_PATH" SCONAME="R_FILE_FULL_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FILE_NAME"/>
   <source>METHOD create_hudson_file_path.

    r_file_full_path = ms_report_configuration-remote_hudson_dir &amp;&amp; sy-sysid &amp;&amp; &apos;_&apos; &amp;&amp; i_file_name.

  ENDMETHOD.                    &quot;create_sap_file_path</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CREATE_SAP_FILE_PATH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="21 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CREATE_SAP_FILE_PATH" SCONAME="I_FILE_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FILE_NAME"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CREATE_SAP_FILE_PATH" SCONAME="I_SYSTEM_ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130404" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-SYSID" PARVALUE="SY-SYSID"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="CREATE_SAP_FILE_PATH" SCONAME="R_FILE_FULL_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FILE_NAME"/>
   <source>METHOD create_sap_file_path.

    r_file_full_path = ms_report_configuration-local_sap_dir &amp;&amp; i_system_id &amp;&amp; &apos;_&apos; &amp;&amp; i_file_name.

  ENDMETHOD.                    &quot;create_sap_file_path</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="DELETE_FILE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="23 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="DELETE_FILE" SCONAME="I_FILE_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD delete_file.

    DELETE DATASET i_file_path.

  ENDMETHOD.                    &quot;delete_sap_files</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="DELETE_SAP_FILES" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="24 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="DELETE_SAP_FILES" SCONAME="I_SYSTEM_ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20131007" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-SYSID" PARVALUE="SY-SYSID"/>
   <source>METHOD delete_sap_files.

    DATA l_system_id TYPE sy-sysid.
    l_system_id = i_system_id.
    IF ( l_system_id IS INITIAL ).
      l_system_id = sy-sysid.
    ENDIF.

    delete_file( create_sap_file_path( i_file_name = ms_report_configuration-test_user_file i_system_id = l_system_id ) ).
    delete_file( create_sap_file_path( i_file_name = ms_report_configuration-test_package_file i_system_id = l_system_id ) ).
    delete_file( create_sap_file_path( i_file_name = ms_report_configuration-coverage_user_file i_system_id = l_system_id ) ).
    delete_file( create_sap_file_path( i_file_name = ms_report_configuration-coverage_package_file i_system_id = l_system_id ) ).

  ENDMETHOD.                    &quot;action_del_file</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="FREE_CONFIG_MEMORY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD free_config_memory.
    FREE MEMORY ID m_memory_configuration_id.
  ENDMETHOD.                    &quot;free_memory</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="GET_CONFIGURATION" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="GET_CONFIGURATION" SCONAME="RS_CONFIGURATION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZCAGS_CI_CONFIGURATION"/>
   <source>METHOD get_configuration.
    rs_configuration = ms_report_configuration.
  ENDMETHOD.                    &quot;get_configuration</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="GET_INSTANCE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="GET_INSTANCE" SCONAME="RO_SINGLETON_INSTANCE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_CAGS_CI_REPORT"/>
   <source>METHOD get_instance.

    IF ( mo_singleton_instance IS INITIAL ).
      CREATE OBJECT mo_singleton_instance.
      mo_singleton_instance-&gt;read_from_memory( ).
    ENDIF.

    ro_singleton_instance = mo_singleton_instance.

  ENDMETHOD.                    &quot;GET_INSTANCE</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="GET_SAP_DIR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="26 " DISPID="0 " AUTHOR="774888" CREATEDON="20130404" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="GET_SAP_DIR" SCONAME="R_DIRPATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130404" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FILE_NAME"/>
   <source>METHOD get_sap_dir.

    r_dirpath = ms_report_configuration-local_sap_dir.

  ENDMETHOD.                    &quot;get_sap_dir</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="INIT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="INIT" SCONAME="I_IS_REPORT_RUN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="INIT" SCONAME="I_CLASSES_COVERAGE_ONLY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="INIT" SCONAME="I_GROUP_BY_USER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="INIT" SCONAME="I_GROUP_BY_PACKAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="INIT" SCONAME="I_TEST_USER_FILE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="INIT" SCONAME="I_TEST_PACKAGE_FILE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="INIT" SCONAME="I_COVERAGE_USER_FILE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="INIT" SCONAME="I_COVERAGE_PACKAGE_FILE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="8 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="INIT" SCONAME="I_LOCAL_SAP_DIR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="9 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="INIT" SCONAME="I_REMOTE_DIR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="10 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="INIT" SCONAME="I_EMAIL_FOR_FAILURES" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="11 " DISPID="0 " AUTHOR="774888" CREATEDON="20131007" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL" PAROPTIONL="X"/>
   <source>METHOD init.

    ms_report_configuration-is_report_run = i_is_report_run.
    ms_report_configuration-is_classes_coverage_only = i_classes_coverage_only.
    ms_report_configuration-is_group_by_user = i_group_by_user.
    ms_report_configuration-is_group_by_package = i_group_by_package.
    ms_report_configuration-test_user_file = i_test_user_file.
    ms_report_configuration-test_package_file = i_test_package_file.
    ms_report_configuration-coverage_user_file = i_coverage_user_file.
    ms_report_configuration-coverage_package_file = i_coverage_package_file.
    ms_report_configuration-local_sap_dir = i_local_sap_dir.
    ms_report_configuration-remote_hudson_dir = i_remote_dir.
    ms_report_configuration-email_for_failures = i_email_for_failures.

  ENDMETHOD.                    &quot;init</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="INIT_DEFAULT_FILES_PATH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="25 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD init_default_files_path.

    me-&gt;init(
          i_test_user_file        = sy-sysid &amp;&amp; &apos;_&apos; &amp;&amp; c_deflt_test_user_file
          i_test_package_file     = sy-sysid &amp;&amp; &apos;_&apos; &amp;&amp; c_deflt_test_package_file
          i_coverage_user_file    = sy-sysid &amp;&amp; &apos;_&apos; &amp;&amp; c_deflt_coverage_user_file
          i_coverage_package_file = sy-sysid &amp;&amp; &apos;_&apos; &amp;&amp; c_deflt_coverage_package_file
          i_local_sap_dir         = c_default_server_dir
        ).

  ENDMETHOD.                    &quot;init_default_files_path</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="IS_COVERAGE_ONLY_FOR_CLASSES" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="IS_COVERAGE_ONLY_FOR_CLASSES" SCONAME="R_ONLY_CLASSES" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>METHOD is_coverage_only_for_classes.

    r_only_classes = ms_report_configuration-is_classes_coverage_only.

  ENDMETHOD.                    &quot;is_coverage_only_for_classes</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="IS_CUSTOMIZED_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="12 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="IS_CUSTOMIZED_NAME" SCONAME="I_OBJECT_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="IS_CUSTOMIZED_NAME" SCONAME="R_IS_CUSTOMIZED_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>METHOD is_customized_name.

    IF ( i_object_name IS INITIAL ).
      r_is_customized_name = abap_false.
    ELSEIF ( i_object_name+0(1) = &apos;Z&apos; OR i_object_name+0(1) = &apos;Y&apos; ).
      r_is_customized_name = abap_true.
    ELSE.
      r_is_customized_name = abap_false.
    ENDIF.

  ENDMETHOD.                    &quot;IS_CUSTOMIZED_NAME</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="IS_ON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="IS_ON" SCONAME="R_IS_ON" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>METHOD is_on.

    r_is_on = boolc( ms_report_configuration-is_report_run = abap_true ).

  ENDMETHOD.                    &quot;IS_ON</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="IS_RUN_LOCK_FILE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="19 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="IS_RUN_LOCK_FILE" SCONAME="R_LOCK_FILE_FOUND" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>METHOD is_run_lock_file.

    DATA l_system_lock_file TYPE string.
    l_system_lock_file = create_sap_file_path( c_file_lock_suffix ).
    r_lock_file_found = check_if_test_file_exists( l_system_lock_file ).

  ENDMETHOD.                    &quot;is_run_lock_file</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="LOCK_RUN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="17 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD lock_run.

    DATA l_file_name TYPE string.
    l_file_name = create_sap_file_path( c_file_lock_suffix ).

    OPEN DATASET l_file_name FOR OUTPUT IN TEXT MODE ENCODING DEFAULT WITH WINDOWS LINEFEED.
    TRANSFER sy-uname TO l_file_name.
    TRANSFER sy-sysid TO l_file_name.
    TRANSFER sy-datum TO l_file_name.
    TRANSFER sy-uzeit TO l_file_name.
    CLOSE DATASET l_file_name.

    IF ( sy-subrc &lt;&gt; 0 ).

      zcx_cags_ci_report_exception=&gt;raise_exception(
        i_code = sy-subrc
        i_msg  = &apos;Cannot create lock file:&apos; &amp;&amp; l_file_name ).

    ENDIF.

  ENDMETHOD.                    &quot;lock_run</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="READ_FROM_MEMORY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD read_from_memory.

    CLEAR ms_report_configuration.
    IMPORT c_mem_report_configuration TO ms_report_configuration FROM MEMORY ID m_memory_configuration_id.

  ENDMETHOD.                    &quot;READ_FROM_MEMORY</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="RUN_UNIT_TESTS_DEFAULT_VARIANT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="27 " DISPID="0 " AUTHOR="774888" CREATEDON="20130516" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD run_unit_tests_default_variant.

    DATA: l_jobcount TYPE btcjobcnt.
    DATA: l_batch_job_name TYPE btcjob.
    l_batch_job_name = sy-sysid &amp;&amp; &apos;_&apos; &amp;&amp; c_batch_jobname.

    l_jobcount = 001.

    CALL FUNCTION &apos;JOB_OPEN&apos;
      EXPORTING
        delanfrep        = &apos; &apos;
        jobgroup         = &apos; &apos;
        jobname          = l_batch_job_name
        sdlstrtdt        = sy-datum
        sdlstrttm        = sy-uzeit
      IMPORTING
        jobcount         = l_jobcount
      EXCEPTIONS
        cant_create_job  = 21
        invalid_job_data = 22
        jobname_missing  = 23.

    IF sy-subrc NE 0.

      zcx_cags_ci_report_exception=&gt;raise_exception(
        i_code = sy-subrc
        i_msg = &apos;ERROR: Cannot open batch job, error=&apos; &amp;&amp; sy-subrc
      ).
    ENDIF.

    SUBMIT zcags_ci_report AND RETURN   &quot;#EC CI_SUBMIT
          USING SELECTION-SET c_default_variant
          USER m_report_exec_user
          VIA JOB l_batch_job_name
          NUMBER l_jobcount.

    IF sy-subrc NE 0.

      zcx_cags_ci_report_exception=&gt;raise_exception(
          i_code = sy-subrc
          i_msg = &apos;ERROR: Cannot submit batch job, error=&apos; &amp;&amp; sy-subrc
        ).

    ENDIF.

    CALL FUNCTION &apos;JOB_CLOSE&apos;
      EXPORTING
        jobcount             = l_jobcount
        jobname              = l_batch_job_name
        strtimmed            = &apos;X&apos;
      EXCEPTIONS
        cant_start_immediate = 31
        invalid_startdate    = 32
        jobname_missing      = 33
        job_close_failed     = 34
        job_nosteps          = 35
        job_notex            = 36
        lock_failed          = 37
        OTHERS               = 39.

    IF sy-subrc NE 0.

      zcx_cags_ci_report_exception=&gt;raise_exception(
        i_code = sy-subrc
        i_msg = &apos;ERROR: Cannot run batch job, error=&apos; &amp;&amp; sy-subrc
      ).

    ENDIF.

  ENDMETHOD.                    &quot;run_unit_tests_default_variant</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="SAVE_TO_LOCAL_SAP_DIR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="13 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="SAVE_TO_LOCAL_SAP_DIR" SCONAME="I_FILEPATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FILE_NAME"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="SAVE_TO_LOCAL_SAP_DIR" SCONAME="IT_FILE_CONTENT_LINES" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TCHAR255"/>
   <source>METHOD save_to_local_sap_dir.

    DATA l_xml_content_line TYPE char255.
    OPEN DATASET i_filepath FOR OUTPUT IN TEXT MODE ENCODING DEFAULT WITH WINDOWS LINEFEED.
    LOOP AT it_file_content_lines INTO l_xml_content_line.
      TRANSFER l_xml_content_line TO i_filepath.
    ENDLOOP.
    CLOSE DATASET i_filepath.

  ENDMETHOD.                    &quot;save_to_local_sap_dir</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="SAVE_TO_MEMORY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD save_to_memory.

    EXPORT c_mem_report_configuration FROM ms_report_configuration TO MEMORY ID m_memory_configuration_id.

  ENDMETHOD.                    &quot;save_to_memory</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="SEND_EMAIL_FOR_FAILURES" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="28 " DISPID="0 " AUTHOR="774888" CREATEDON="20130906" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="SEND_EMAIL_FOR_FAILURES" SCONAME="IO_TEST_RESULTS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130906" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_CAGS_CI_TEST_DATA"/>
   <source>METHOD send_email_for_failures.

    DATA lt_failed_methods TYPE zcags_ci_unit_method_tt.
    DATA ls_failed_method TYPE zcags_ci_unit_method_s.
    DATA l_user TYPE sy-uname.
    DATA l_global_class TYPE string.
    DATA l_global_local_class_name TYPE string.

    lt_failed_methods = io_test_results-&gt;get_failed_methods( ).

    LOOP AT lt_failed_methods INTO ls_failed_method.

      l_global_local_class_name = ls_failed_method-class_name.
      l_global_class = mo_metadata_dao-&gt;extract_global_class_unit_test( l_global_local_class_name ).
      l_user = mo_metadata_dao-&gt;find_class_update_user( l_global_class ).

      send_email_to_user(
        i_user              = l_user
        i_failed_class_name = ls_failed_method-class_name
      ).

    ENDLOOP.

  ENDMETHOD.                    &quot;send_email_for_failures</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="SEND_EMAIL_TO_USER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="29 " DISPID="0 " AUTHOR="774888" CREATEDON="20130909" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="SEND_EMAIL_TO_USER" SCONAME="I_USER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130909" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-UNAME"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="SEND_EMAIL_TO_USER" SCONAME="I_FAILED_CLASS_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130909" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_UNIT_METHOD_S-CLASS_NAME"/>
   <source>METHOD send_email_to_user.

    DATA lo_email_sender              TYPE REF TO zcl_cags_send_mail.
    DATA lo_exception                 TYPE REF TO cx_root.
    DATA lt_email_body_with_new_lines TYPE soli_tab.
    DATA l_body_line                  TYPE soli.
    DATA l_empty_line                 TYPE soli.
    DATA lt_recipients                TYPE BCSY_SMTPA.
    DATA ls_recipient                 TYPE ad_smtpadr.
    DATA l_subject                    TYPE string.

    l_empty_line-line = cl_abap_char_utilities=&gt;newline.

    l_body_line-line = |Unit test failed in { sy-sysid }, last transport change found for your SAP user: { i_user }.|.
    APPEND l_body_line TO lt_email_body_with_new_lines.
    l_body_line-line  = |Please check and fix. Class with failing unit test: { i_failed_class_name }.|.
    APPEND l_body_line TO lt_email_body_with_new_lines.
    APPEND l_empty_line TO lt_email_body_with_new_lines..

    l_body_line-line = |See latest tests results:|.
    APPEND l_body_line TO lt_email_body_with_new_lines.
    l_body_line-line = |http://erpdev.statoil.no:6060/view/Unit%20Tests/ |.
    APPEND l_body_line TO lt_email_body_with_new_lines.

    APPEND l_empty_line TO lt_email_body_with_new_lines.
    l_body_line-line = |This is automatically generated message.|.
    APPEND l_body_line TO lt_email_body_with_new_lines.

    l_subject = | Unit test failed in { sy-sysid }, { i_failed_class_name }|.

    TRY.

        ls_recipient = zcl_user_dao=&gt;get_instance( )-&gt;find_user_email( i_user ).
        APPEND ls_recipient TO lt_recipients.

        CREATE OBJECT lo_email_sender.

        lo_email_sender-&gt;send_email(
          EXPORTING
            p_subject          = l_subject
            p_type             = &apos;TXT&apos;    &quot; Code for document class
            p_addresses        = lt_recipients
            p_body_tab         = lt_email_body_with_new_lines
            p_priority         = &apos;5&apos;    &quot; Document priority (1 High - 9 Low)
            p_pdf_linsz        = 20
            p_send_immediately = abap_true
        ).


      CATCH cx_root INTO lo_exception.

    ENDTRY.

  ENDMETHOD.                    &quot;send_email_to_user</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="SET_REPORT_EXEC_USER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="30 " DISPID="0 " AUTHOR="774888" CREATEDON="20131008" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="SET_REPORT_EXEC_USER" SCONAME="I_USER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20131008" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-UNAME" PARVALUE="&apos;123456&apos;"/>
   <source>METHOD set_report_exec_user.

    m_report_exec_user = i_user.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="TRANSFER_DATA_TO_HUDSON" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="14 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="TRANSFER_DATA_TO_HUDSON" SCONAME="I_REMOTE_FILE_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FILE_NAME"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="TRANSFER_DATA_TO_HUDSON" SCONAME="IT_FILE_CONTENT_LINES" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TCHAR255"/>
   <source>METHOD transfer_data_to_hudson.

    DATA i_remote_file_path_string TYPE string.
    i_remote_file_path_string = i_remote_file_path.

    CALL FUNCTION &apos;GUI_DOWNLOAD&apos;
      EXPORTING
        filename              = i_remote_file_path_string  &quot;&apos;\\10.216.209.117\ci_workspace&apos;
        filetype              = &apos;ASC&apos;
*       APPEND                = &apos;X&apos;
*       write_field_separator = &apos;X&apos;
*       CONFIRM_OVERWRITE     = &apos;X&apos;
      TABLES
        data_tab              = it_file_content_lines
      EXCEPTIONS
        file_open_error       = 1
        file_write_error      = 2
        OTHERS                = 3.

  ENDMETHOD.                    &quot;transfer_coverage_to_hudson</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="UNLOCK_RUN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="18 " DISPID="0 " AUTHOR="774888" CREATEDON="20130326" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="UNLOCK_RUN" SCONAME="I_SYSTEM_ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130404" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-SYSID" PARVALUE="SY-SYSID"/>
   <source>METHOD unlock_run.

    DATA l_file_name TYPE string.
    l_file_name = create_sap_file_path( i_file_name = c_file_lock_suffix i_system_id = i_system_id ).
    delete_file( l_file_name ).

  ENDMETHOD.                    &quot;unlock_run</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="UPDATE_FINAL_COVERAGE_RESULTS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="UPDATE_FINAL_COVERAGE_RESULTS" SCONAME="RO_COVERAGE_RESULTS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_CAGS_CI_CODE_COVERAGE"/>
   <source>METHOD update_final_coverage_results.

    DATA lo_code_coverage    TYPE REF TO zcl_cags_ci_code_coverage.
    DATA lt_sap_coverage_result TYPE cvt_propro_tkey.
    DATA ls_coverage_result TYPE cvs_propro_tkey.
    DATA l_obj_name TYPE string.
    DATA ls_class_coverage TYPE zcags_ci_code_coverage_s.

    lo_code_coverage = zcl_cags_ci_code_coverage=&gt;get_instance( ).

    IF ( lo_code_coverage-&gt;is_coverage_enabled( ) = abap_true ).

      lt_sap_coverage_result = mo_metadata_dao-&gt;find_sap_coverage_results( lo_code_coverage-&gt;get_coverage_key( ) ).

      LOOP AT lt_sap_coverage_result INTO ls_coverage_result.

        l_obj_name = ls_coverage_result-obj_name.
        IF ( is_customized_name( l_obj_name ) = abap_false ).
          CONTINUE.
        ENDIF.

        CLEAR ls_class_coverage.
        ls_class_coverage = lo_code_coverage-&gt;extract_coverage( ls_coverage_result ).
        IF ( ls_class_coverage IS NOT INITIAL ).
          lo_code_coverage-&gt;add_class_coverage( is_class_coverage = ls_class_coverage ).
        ENDIF.

      ENDLOOP.

      &quot;lo_code_coverage-&gt;save_to_pc_file( ).

    ENDIF.

    ro_coverage_results = lo_code_coverage.

  ENDMETHOD.                    &quot;update_final_coverage_results</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="UPDATE_FINAL_TESTS_RESULTS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="UPDATE_FINAL_TESTS_RESULTS" SCONAME="IT_SAP_PROGRAMS_TEST_RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="IF_SAUNIT_INTERNAL_RESULT_TYPE=&gt;TY_T_PROGRAMS"/>
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="UPDATE_FINAL_TESTS_RESULTS" SCONAME="RO_TEST_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_CAGS_CI_TEST_DATA"/>
   <source>METHOD update_final_tests_results.

    DATA lo_unit_tests TYPE REF TO zcl_cags_ci_test_data.
    DATA lt_run_programs TYPE if_saunit_internal_result_type=&gt;ty_t_programs.
    DATA ls_program_info TYPE if_saunit_internal_result_type=&gt;ty_s_program.
    DATA lt_unit_tests_classes TYPE if_saunit_internal_result_type=&gt;ty_t_classes.
    DATA ls_unit_test_class TYPE if_saunit_internal_result_type=&gt;ty_s_class.
    DATA lt_unit_tests_methods TYPE if_saunit_internal_result_type=&gt;ty_t_methods.
    DATA ls_unit_test_method TYPE if_saunit_internal_result_type=&gt;ty_s_method.
    DATA l_unit_test_class_name TYPE string.
    DATA l_unit_test_local_class TYPE string.
    DATA l_unit_test_method TYPE string.
    DATA lt_unit_test_method_alerts TYPE if_saunit_internal_result_type=&gt;ty_t_alerts.
    DATA ls_unit_test_method_alert TYPE if_saunit_internal_result_type=&gt;ty_s_alert.
    DATA l_method_error_message TYPE string.
    DATA l_method_error_msg_line TYPE string.
    DATA lt_method_error_msg_lines TYPE string_table.

    lt_run_programs = it_sap_programs_test_result.

    lo_unit_tests = zcl_cags_ci_test_data=&gt;get_instance( ).

    LOOP AT lt_run_programs INTO ls_program_info.

      l_unit_test_class_name = ls_program_info-info-name.
      lt_unit_tests_classes = ls_program_info-classes.

      LOOP AT lt_unit_tests_classes INTO ls_unit_test_class.
*          l_unit_test_class_name = ls_unit_test_class-info-name.
        l_unit_test_local_class = ls_unit_test_class-info-name.
        lt_unit_tests_methods = ls_unit_test_class-methods.

        LOOP AT lt_unit_tests_methods INTO ls_unit_test_method.

          l_unit_test_method = ls_unit_test_method-info-name. &quot; This is local class test name

          IF ( ls_unit_test_method-info-has_error = &apos;X&apos; ).

            lt_unit_test_method_alerts = ls_unit_test_method-alerts.

            READ TABLE lt_unit_test_method_alerts INDEX 1 INTO ls_unit_test_method_alert.
            lt_method_error_msg_lines = ls_unit_test_method_alert-header-params.
            CLEAR l_method_error_message.
            LOOP AT lt_method_error_msg_lines INTO l_method_error_msg_line.
              l_method_error_message = l_method_error_message &amp;&amp; l_method_error_msg_line.
            ENDLOOP.

            lo_unit_tests-&gt;add_failed_method(
                i_class_name        = l_unit_test_class_name
                i_local_test_class  = l_unit_test_local_class
                i_method_name       = l_unit_test_method
                i_alert_msg         = l_method_error_message
            ).
          ELSE.
            lo_unit_tests-&gt;add_test_method(
                i_class_name        = l_unit_test_class_name
                i_local_test_class  = l_unit_test_local_class
                i_method_name       = l_unit_test_method
            ).
          ENDIF.

        ENDLOOP.

      ENDLOOP.

    ENDLOOP.

    ro_test_data = lo_unit_tests.

  ENDMETHOD.                    &quot;update_final_tests_results</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="UPDATE_SUMMARY_SAVE_FILES" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="16 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_REPORT" CMPNAME="UPDATE_SUMMARY_SAVE_FILES" SCONAME="IT_SAP_PROGRAMS_TEST_RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20131008" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="IF_SAUNIT_INTERNAL_RESULT_TYPE=&gt;TY_T_PROGRAMS"/>
   <source>METHOD update_summary_save_files.

    DATA lo_coverage TYPE REF TO zcl_cags_ci_code_coverage.
    DATA lo_test_results TYPE REF TO zcl_cags_ci_test_data.
    DATA lt_file_content_package TYPE tchar255.
    DATA lt_file_content_user TYPE tchar255.

    lo_coverage = update_final_coverage_results( ).

    lt_file_content_package = lo_coverage-&gt;build_xml_content_package( ).
    save_to_local_sap_dir(
          i_filepath            = create_sap_file_path( ms_report_configuration-coverage_package_file )
          it_file_content_lines = lt_file_content_package
    ).
    transfer_data_to_hudson(
      EXPORTING i_remote_file_path      = create_hudson_file_path( ms_report_configuration-coverage_package_file )
      CHANGING  it_file_content_lines   = lt_file_content_package
    ).

    lt_file_content_user = lo_coverage-&gt;build_xml_content_user( ).
    save_to_local_sap_dir(
          i_filepath            = create_sap_file_path( ms_report_configuration-coverage_user_file )
          it_file_content_lines = lt_file_content_user
    ).
    transfer_data_to_hudson(
       EXPORTING  i_remote_file_path     = create_hudson_file_path( ms_report_configuration-coverage_user_file )
       CHANGING   it_file_content_lines  = lt_file_content_user
     ).

    lo_test_results = update_final_tests_results( it_sap_programs_test_result ).

    lo_test_results-&gt;build_xml_tests_result(
      IMPORTING
        et_tests_results_package = lt_file_content_package
        et_tests_results_user    = lt_file_content_user ).

    save_to_local_sap_dir(
          i_filepath            = create_sap_file_path( ms_report_configuration-test_package_file )
          it_file_content_lines = lt_file_content_package
    ).
    transfer_data_to_hudson(
      EXPORTING   i_remote_file_path      = create_hudson_file_path( ms_report_configuration-test_package_file )
      CHANGING    it_file_content_lines   = lt_file_content_package
    ).

    save_to_local_sap_dir(
        i_filepath            = create_sap_file_path( ms_report_configuration-test_user_file )
        it_file_content_lines = lt_file_content_user
    ).
    transfer_data_to_hudson(
      EXPORTING   i_remote_file_path      = create_hudson_file_path( ms_report_configuration-test_user_file )
      CHANGING    it_file_content_lines   = lt_file_content_user
    ).

    IF ( ms_report_configuration-email_for_failures = abap_true ).
      send_email_for_failures( lo_test_results ).
    ENDIF.

  ENDMETHOD.                    &quot;update_summary_save_files</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_CAGS_CI_TEST_DATA" VERSION="1" LANGU="E" DESCRIPT="Unit Test results data holder" UUID="B499BAB2546E1EE2A5A601D5710D5390" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="774888" CREATEDON="20130325" CHANGEDON="20131020" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="731" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>*----------------------------------------------------------------------*
*       CLASS ZCL_CAGS_CI_TEST_DATA DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS zcl_cags_ci_test_data DEFINITION
  PUBLIC
  CREATE PUBLIC .

  PUBLIC SECTION.
    TYPE-POOLS abap .

    CLASS-METHODS filter_class_name
      IMPORTING
        !i_class_name TYPE string
      RETURNING
        value(r_pure_class_name) TYPE string .
    CLASS-METHODS get_instance
      RETURNING
        value(ro_test_data_instance) TYPE REF TO zcl_cags_ci_test_data .
    METHODS add_failed_method
      IMPORTING
        !i_class_name TYPE string
        !i_local_test_class TYPE string
        !i_method_name TYPE string
        !i_alert_msg TYPE string .
    METHODS add_test_method
      IMPORTING
        !i_method_name TYPE string
        !i_local_test_class TYPE string
        !i_class_name TYPE string .
    METHODS constructor .

    METHODS filter_methods_remove_failed
      IMPORTING
        !it_failed_methods TYPE zcags_ci_unit_method_tt
        !it_all_methods TYPE zcags_ci_unit_method_tt
      RETURNING
        value(rt_success_methods) TYPE zcags_ci_unit_method_tt .
    CLASS-METHODS set_instance
      IMPORTING
        !io_new_instance TYPE REF TO zcl_cags_ci_test_data .
    METHODS build_xml_tests_result
      EXPORTING
        !et_tests_results_package TYPE tchar255
        !et_tests_results_user TYPE tchar255 .

    METHODS get_failed_methods
      RETURNING value(rt_failed_methods) TYPE zcags_ci_unit_method_tt.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.

    CLASS-DATA mo_test_data_instance TYPE REF TO zcl_cags_ci_test_data .
    CLASS-DATA c_log_file_name TYPE string VALUE &apos;CI_DEBUG.LOG&apos;. &quot;#EC NOTEXT .  . &quot; .

    CLASS-DATA mo_metadata_dao TYPE REF TO zcl_cags_ci_metadata_dao.

    DATA mt_all_methods TYPE zcags_ci_unit_method_tt .
    DATA mt_failed_methods TYPE zcags_ci_unit_method_tt .
    CLASS-DATA c_abap_unit_xml_file_package TYPE string VALUE &apos;CI_ABAP_UNIT_PACKAGE.XML&apos;. &quot;#EC NOTEXT . &quot; .
    CLASS-DATA c_abap_unit_xml_file_user TYPE string VALUE &apos;CI_ABAP_UNIT_USER.XML&apos;. &quot;#EC NOTEXT .

    CLASS-METHODS filter_method_name
      IMPORTING
        !i_method_name TYPE string
      RETURNING
        value(r_pure_method_name) TYPE string .</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCL_CAGS_CI_TEST_DATA" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" EXPLICIT="X" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="C_ABAP_UNIT_XML_FILE_PACKAGE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="6 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="1" ATTVALUE="&apos;CI_ABAP_UNIT_PACKAGE.XML&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="C_ABAP_UNIT_XML_FILE_USER" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="7 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="1" ATTVALUE="&apos;CI_ABAP_UNIT_USER.XML&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="C_LOG_FILE_NAME" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="1" ATTVALUE="&apos;CI_DEBUG.LOG&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="MO_METADATA_DAO" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_CAGS_CI_METADATA_DAO" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="MO_TEST_DATA_INSTANCE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_CAGS_CI_TEST_DATA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="MT_ALL_METHODS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZCAGS_CI_UNIT_METHOD_TT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="MT_FAILED_METHODS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="5 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZCAGS_CI_UNIT_METHOD_TT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="ADD_FAILED_METHOD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="ADD_FAILED_METHOD" SCONAME="I_CLASS_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="ADD_FAILED_METHOD" SCONAME="I_LOCAL_TEST_CLASS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="ADD_FAILED_METHOD" SCONAME="I_METHOD_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="ADD_FAILED_METHOD" SCONAME="I_ALERT_MSG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD add_failed_method.

    DATA ls_method TYPE zcags_ci_unit_method_s.
    DATA l_filtered_method_name TYPE string.
    DATA l_filtered_class_name TYPE string.
    DATA l_class_user TYPE uname.
    DATA l_class_package TYPE devclass.

    IF ( i_class_name IS INITIAL OR i_class_name = &apos;???&apos; ).
      l_filtered_class_name = filter_class_name( i_method_name ).
    ELSE.
      l_filtered_class_name = filter_class_name( i_class_name ).
    ENDIF.

    IF ( l_filtered_class_name IS INITIAL ).
      l_filtered_class_name = &apos;CLASS_UNKOWN&apos;.
    ENDIF.

    l_filtered_method_name = filter_method_name( i_method_name ).

    l_class_user = mo_metadata_dao-&gt;find_class_user( l_filtered_class_name ).

    l_class_package = mo_metadata_dao-&gt;find_class_package_full_path( l_filtered_class_name ).

    ls_method-class_name  = l_filtered_class_name &amp;&amp; &apos;~&apos; &amp;&amp; i_local_test_class.
    ls_method-method_name = l_filtered_method_name.
    ls_method-alert_info  = i_alert_msg.
    ls_method-author_user = l_class_user.
    ls_method-class_package = l_class_package.
    APPEND ls_method TO mt_failed_methods.



  ENDMETHOD.                    &quot;add_failed_method</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="ADD_TEST_METHOD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="ADD_TEST_METHOD" SCONAME="I_METHOD_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="ADD_TEST_METHOD" SCONAME="I_LOCAL_TEST_CLASS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="ADD_TEST_METHOD" SCONAME="I_CLASS_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD add_test_method.

    DATA ls_method TYPE zcags_ci_unit_method_s.
    DATA l_filtered_method_name TYPE string.
    DATA l_filtered_class_name TYPE string.
    DATA l_class_user TYPE uname.
    DATA l_class_package TYPE string.
    l_filtered_class_name = filter_class_name( i_class_name ).
    l_filtered_method_name = filter_method_name( i_method_name ).
    l_class_user = mo_metadata_dao-&gt;find_class_user( l_filtered_class_name ).
    l_class_package = mo_metadata_dao-&gt;find_class_package_full_path( l_filtered_class_name ).

    ls_method-class_name = l_filtered_class_name &amp;&amp; &apos;~&apos; &amp;&amp; i_local_test_class.
    ls_method-method_name = l_filtered_method_name.
    ls_method-author_user = l_class_user.
    ls_method-class_package = l_class_package.
    APPEND ls_method TO mt_all_methods.

  ENDMETHOD.                    &quot;add_test_method</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="BUILD_XML_TESTS_RESULT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="774888" CREATEDON="20130402" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="BUILD_XML_TESTS_RESULT" SCONAME="ET_TESTS_RESULTS_PACKAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130402" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TCHAR255"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="BUILD_XML_TESTS_RESULT" SCONAME="ET_TESTS_RESULTS_USER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130402" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TCHAR255"/>
   <source>METHOD build_xml_tests_result.

    DATA ls_method TYPE zcags_ci_unit_method_s.
    DATA lt_success_methods TYPE zcags_ci_unit_method_tt.
    DATA l_class_name TYPE string.
    DATA l_method_name TYPE string.
    DATA l_alert_info TYPE string.
    DATA l_package TYPE string.
    DATA l_class_user TYPE uname.

    DATA lo_junit_xml_creator TYPE REF TO zcl_cags_ci_test_xml_creator.
    CREATE OBJECT lo_junit_xml_creator.

    lo_junit_xml_creator-&gt;open( ).

    LOOP AT mt_failed_methods INTO ls_method.
      l_method_name = ls_method-method_name.
      l_class_name = ls_method-class_name.
      l_alert_info = ls_method-alert_info.
      l_class_user = ls_method-author_user.
      l_package    = ls_method-class_package.

      lo_junit_xml_creator-&gt;add_failure_method(
          EXPORTING
            i_package     = l_package
            i_user        = l_class_user
            i_class_name  = l_class_name
            i_method_name = l_method_name
            i_failure_msg = l_alert_info
            i_failure_type = &apos;ABAP Unit Test error&apos;
        ).

    ENDLOOP.

    lt_success_methods = filter_methods_remove_failed(
      it_failed_methods = mt_failed_methods
      it_all_methods    = mt_all_methods
    ).
    LOOP AT lt_success_methods INTO ls_method.

      l_method_name = ls_method-method_name.
      l_class_name = ls_method-class_name.
      l_class_user = ls_method-author_user.
      l_package = ls_method-class_package.

      lo_junit_xml_creator-&gt;add_success_method(
          EXPORTING
            i_package     = l_package
            i_user        = l_class_user
            i_class_name  = l_class_name
            i_method_name = l_method_name
        ).

    ENDLOOP.

    lo_junit_xml_creator-&gt;close( ).

    et_tests_results_package = lo_junit_xml_creator-&gt;get_xml_content_package( ).
    et_tests_results_user = lo_junit_xml_creator-&gt;get_xml_content_user( ).


  ENDMETHOD.                    &quot;build_xml_tests_result</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD constructor.

    mo_metadata_dao = zcl_cags_ci_metadata_dao=&gt;get_instance( ).

  ENDMETHOD.                    &quot;constructor</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="FILTER_CLASS_NAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="FILTER_CLASS_NAME" SCONAME="I_CLASS_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="FILTER_CLASS_NAME" SCONAME="R_PURE_CLASS_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD filter_class_name.

    DATA l_name_length TYPE i.
    DATA l_class_name_30_char TYPE char30.
    DATA l_equality_chars_postfix TYPE string.
    l_name_length = strlen( i_class_name ).

    IF ( zcl_util_string=&gt;starts_with(
        i_string      = i_class_name
        i_prefix      = &apos;\XX=YY\CLASS=&apos;
     ) = abap_true ).
      DATA l_class_prefix TYPE string.
      DATA l_class_suffix TYPE string.
      SPLIT i_class_name AT &apos;\XX=YY\CLASS=&apos; INTO l_class_prefix l_class_suffix.
      SPLIT l_class_suffix AT &apos;\METHOD=&apos; INTO l_class_prefix l_class_suffix.
      r_pure_class_name = l_class_prefix.
    ELSEIF ( l_name_length &gt; 30 ).
      l_class_name_30_char = zcl_util_string=&gt;substring(
          i_string = i_class_name
          i_length = 30
      ).

      SPLIT l_class_name_30_char AT &apos;=&apos; INTO r_pure_class_name l_equality_chars_postfix.
    ELSE.
      r_pure_class_name = i_class_name.
    ENDIF.

  ENDMETHOD.                    &quot;filter_class_name</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="FILTER_METHODS_REMOVE_FAILED" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="FILTER_METHODS_REMOVE_FAILED" SCONAME="IT_FAILED_METHODS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_UNIT_METHOD_TT"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="FILTER_METHODS_REMOVE_FAILED" SCONAME="IT_ALL_METHODS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCAGS_CI_UNIT_METHOD_TT"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="FILTER_METHODS_REMOVE_FAILED" SCONAME="RT_SUCCESS_METHODS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZCAGS_CI_UNIT_METHOD_TT"/>
   <source>METHOD filter_methods_remove_failed.

    DATA ls_failed_method TYPE zcags_ci_unit_method_s.

    rt_success_methods = it_all_methods.

    LOOP AT it_failed_methods INTO ls_failed_method.
      DELETE rt_success_methods WHERE class_name = ls_failed_method-class_name AND method_name = ls_failed_method-method_name.
    ENDLOOP.

  ENDMETHOD.                    &quot;filter_methods_remove_failed</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="FILTER_METHOD_NAME" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="FILTER_METHOD_NAME" SCONAME="I_METHOD_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="FILTER_METHOD_NAME" SCONAME="R_PURE_METHOD_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD filter_method_name.

    DATA l_method_string_prefix TYPE string.
    DATA l_method_name TYPE string.

    &quot;\XX=YY\CLASS=LCL_CALCULATOR2_TEST\METHOD=ADD2
    SPLIT i_method_name AT &apos;METHOD=&apos; INTO l_method_string_prefix l_method_name.

    IF ( l_method_name IS INITIAL ).
      r_pure_method_name = l_method_string_prefix.
    ELSE.
      r_pure_method_name = l_method_name.
    ENDIF.

  ENDMETHOD.                    &quot;filter_method_name</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="GET_FAILED_METHODS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="774888" CREATEDON="20130906" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="731" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="GET_FAILED_METHODS" SCONAME="RT_FAILED_METHODS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130906" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZCAGS_CI_UNIT_METHOD_TT"/>
   <source>METHOD get_failed_methods.

    rt_failed_methods = mt_failed_methods.

  ENDMETHOD.                    &quot;get_failed_methods</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="GET_INSTANCE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="GET_INSTANCE" SCONAME="RO_TEST_DATA_INSTANCE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_CAGS_CI_TEST_DATA"/>
   <source>METHOD get_instance.

    IF ( mo_test_data_instance IS INITIAL ).
      CREATE OBJECT mo_test_data_instance.
    ENDIF.

    ro_test_data_instance = mo_test_data_instance.

  ENDMETHOD.                    &quot;GET_INSTANCE</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="SET_INSTANCE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20131020" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_DATA" CMPNAME="SET_INSTANCE" SCONAME="IO_NEW_INSTANCE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130906" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_CAGS_CI_TEST_DATA"/>
   <source>METHOD set_instance.

    mo_test_data_instance = io_new_instance.

  ENDMETHOD.                    &quot;set_instance</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" VERSION="1" LANGU="E" DESCRIPT="Unit tests results holder and xml content creator" UUID="B499BAB2546E1EE2A5A5F2CDF7CA7390" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="774888" CREATEDON="20130325" CHANGEDON="20130522" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="731" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>*----------------------------------------------------------------------*
*       CLASS ZCL_CAGS_CI_TEST_XML_CREATOR DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS zcl_cags_ci_test_xml_creator DEFINITION
  PUBLIC
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS open .
    METHODS add_success_method
      IMPORTING
        !i_package TYPE string
        !i_user TYPE uname
        !i_class_name TYPE string
        !i_method_name TYPE string .
    METHODS add_failure_method
      IMPORTING
        !i_package TYPE string
        !i_user TYPE uname
        !i_class_name TYPE string
        !i_method_name TYPE string
        !i_failure_msg TYPE string
        !i_failure_type TYPE string .
    METHODS close .

    METHODS get_xml_content_package
       RETURNING
         value(rt_tests_result) TYPE tchar255.

    METHODS get_xml_content_user
      RETURNING
        value(rt_tests_result) TYPE tchar255.</publicSection>
  <protectedSection>PROTECTED SECTION.</protectedSection>
  <privateSection>PRIVATE SECTION.

    DATA mt_xml_content_package_tests TYPE tchar255 .
    DATA mt_xml_content_user_tests TYPE tchar255 .
    CLASS-DATA c_local_hudson_xml_file_packag TYPE string VALUE &apos;C:\APPL\CI\JOBS\JUNIT_PACKAGE_RESULTS\PACKAGE_RESULTS.XML&apos;. &quot;#EC NOTEXT .  .  .  .  .  .  . &quot; .
    CLASS-DATA c_local_hudson_xml_file_user TYPE string VALUE &apos;C:\APPL\CI\JOBS\JUNIT_USER_RESULTS\USER_RESULTS.XML&apos;. &quot;#EC NOTEXT .  .  .  .  .  .  . &quot; .
    CLASS-DATA c_local_hudson_xml_file_manual TYPE string VALUE &apos;C:\APPL\CI\JOBS\JUNIT_RESULTS\MANUAL_RESULTS.XML&apos;. &quot;#EC NOTEXT .</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="C_LOCAL_HUDSON_XML_FILE_MANUAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="5 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" ATTDECLTYP="1" ATTVALUE="&apos;C:\APPL\CI\JOBS\JUNIT_RESULTS\MANUAL_RESULTS.XML&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="C_LOCAL_HUDSON_XML_FILE_PACKAG" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" ATTDECLTYP="1" ATTVALUE="&apos;C:\APPL\CI\JOBS\JUNIT_PACKAGE_RESULTS\PACKAGE_RESULTS.XML&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="C_LOCAL_HUDSON_XML_FILE_USER" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" ATTDECLTYP="1" ATTVALUE="&apos;C:\APPL\CI\JOBS\JUNIT_USER_RESULTS\USER_RESULTS.XML&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="MT_XML_CONTENT_PACKAGE_TESTS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TCHAR255" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="MT_XML_CONTENT_USER_TESTS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TCHAR255" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="ADD_FAILURE_METHOD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="ADD_FAILURE_METHOD" SCONAME="I_PACKAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130516" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="ADD_FAILURE_METHOD" SCONAME="I_USER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130516" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="UNAME"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="ADD_FAILURE_METHOD" SCONAME="I_CLASS_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130516" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="ADD_FAILURE_METHOD" SCONAME="I_METHOD_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130516" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="ADD_FAILURE_METHOD" SCONAME="I_FAILURE_MSG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130516" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="ADD_FAILURE_METHOD" SCONAME="I_FAILURE_TYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130516" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD add_failure_method.

    DATA l_line TYPE string.
    DATA l_unescaped_failure_msg TYPE string.
    l_line = |   &lt;testcase classname=&quot;{ i_package }.{ i_class_name }&quot; name=&quot;{ i_method_name }&quot; time=&quot;0.0&quot; &gt;|.
    APPEND l_line TO mt_xml_content_package_tests.
    l_line = |   &lt;testcase classname=&quot;{ i_user }.{ i_class_name }&quot; name=&quot;{ i_method_name }&quot; time=&quot;0.0&quot; &gt;|.
    APPEND l_line TO mt_xml_content_user_tests.

    l_unescaped_failure_msg = i_failure_msg.
    REPLACE ALL OCCURRENCES OF &apos;&lt;&apos; IN l_unescaped_failure_msg WITH &apos;&amp;lt;&apos;.
    REPLACE ALL OCCURRENCES OF &apos;&gt;&apos; IN l_unescaped_failure_msg WITH &apos;&amp;gt;&apos;.
    l_line = |      &lt;failure message=&quot;{ l_unescaped_failure_msg }&quot; type=&quot;{ i_failure_type }&quot;&gt;Error found.&lt;/failure&gt;|.
    APPEND l_line TO mt_xml_content_package_tests.
    APPEND l_line TO mt_xml_content_user_tests.

    l_line = |   &lt;/testcase&gt;|.
    APPEND l_line TO mt_xml_content_package_tests.
    APPEND l_line TO mt_xml_content_user_tests.

  ENDMETHOD.                    &quot;ADD_FAILURE_METHOD</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="ADD_SUCCESS_METHOD" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="ADD_SUCCESS_METHOD" SCONAME="I_PACKAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130516" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="ADD_SUCCESS_METHOD" SCONAME="I_USER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130516" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="UNAME"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="ADD_SUCCESS_METHOD" SCONAME="I_CLASS_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130516" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="ADD_SUCCESS_METHOD" SCONAME="I_METHOD_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130516" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD add_success_method.

    DATA l_line TYPE string.
    l_line = |   &lt;testcase classname=&quot;{ i_package }.{ i_class_name }&quot; name=&quot;{ i_method_name }&quot; time=&quot;0.0&quot; /&gt;|.
    APPEND l_line TO mt_xml_content_package_tests.

    l_line = |   &lt;testcase classname=&quot;{ i_user }.{ i_class_name }&quot; name=&quot;{ i_method_name }&quot; time=&quot;0.0&quot; /&gt;|.
    APPEND l_line TO mt_xml_content_user_tests.

  ENDMETHOD.                    &quot;add_success_method</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="CLOSE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD close.

    DATA l_line TYPE string.

    l_line = |&lt;/testsuite&gt;|.
    APPEND l_line TO mt_xml_content_package_tests.
    APPEND l_line TO mt_xml_content_user_tests.

  ENDMETHOD.                    &quot;CLOSE</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="GET_XML_CONTENT_PACKAGE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="GET_XML_CONTENT_PACKAGE" SCONAME="RT_TESTS_RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130516" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="TCHAR255"/>
   <source>METHOD get_xml_content_package.

    rt_tests_result = mt_xml_content_package_tests.

  ENDMETHOD.                    &quot;get_xml_content_package</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="GET_XML_CONTENT_USER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="GET_XML_CONTENT_USER" SCONAME="RT_TESTS_RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130516" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="TCHAR255"/>
   <source>METHOD get_xml_content_user.

    rt_tests_result = mt_xml_content_user_tests.

  ENDMETHOD.                    &quot;get_xml_content_user</source>
  </method>
  <method CLSNAME="ZCL_CAGS_CI_TEST_XML_CREATOR" CMPNAME="OPEN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130325" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD open.

    DATA l_line TYPE string.
    DATA l_datetime TYPE string.

    CLEAR mt_xml_content_package_tests.

    l_datetime = |{ sy-datum } { sy-uzeit }|.

    l_line = |&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;|.
    APPEND l_line TO mt_xml_content_package_tests.
    APPEND l_line TO mt_xml_content_user_tests.
    l_line = |&lt;testsuite created=&quot;{ l_datetime }&quot;&gt;|.
    APPEND l_line TO mt_xml_content_package_tests.
    APPEND l_line TO mt_xml_content_user_tests.

  ENDMETHOD.                    &quot;OPEN</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCX_CAGS_CI_REPORT_EXCEPTION" VERSION="1" LANGU="E" DESCRIPT="Exception during CI report execution" UUID="B499BAB2546E1EE2A5D85AB0E40D3390" CATEGORY="40" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="774888" CREATEDON="20130327" CHANGEDON="20130522" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="731" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="CX_DYNAMIC_CHECK">
  <publicSection>*----------------------------------------------------------------------*
*       CLASS zcx_cags_ci_report_exception DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS zcx_cags_ci_report_exception DEFINITION
  PUBLIC
  INHERITING FROM cx_dynamic_check
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.


    CLASS-METHODS create
      IMPORTING i_code  TYPE sy-subrc  OPTIONAL
                i_msg   TYPE string OPTIONAL
      RETURNING
        value(ro_exception) TYPE REF TO zcx_cags_ci_report_exception.

    CLASS-METHODS raise_exception
      IMPORTING
        i_code TYPE sy-subrc DEFAULT &apos;0&apos;
        i_msg  TYPE string
      raising zcx_cags_ci_report_exception
        .

    METHODS get_msg_with_code
          RETURNING value(r_msg) TYPE string.</publicSection>
  <protectedSection/>
  <privateSection>PRIVATE SECTION.
    DATA m_error_code TYPE sy-subrc.
    DATA m_msg TYPE string.</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZCX_CAGS_CI_REPORT_EXCEPTION" CMPNAME="M_ERROR_CODE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20130522" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-SUBRC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCX_CAGS_CI_REPORT_EXCEPTION" CMPNAME="M_MSG" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20130522" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCX_CAGS_CI_REPORT_EXCEPTION" REFCLSNAME="CX_DYNAMIC_CHECK" VERSION="1" STATE="1" AUTHOR="774888" CREATEDON="20130327" CHANGEDON="20130522"/>
  <method CLSNAME="ZCX_CAGS_CI_REPORT_EXCEPTION" CMPNAME="CREATE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130402" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCX_CAGS_CI_REPORT_EXCEPTION" CMPNAME="CREATE" SCONAME="I_CODE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130402" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-SUBRC" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_CAGS_CI_REPORT_EXCEPTION" CMPNAME="CREATE" SCONAME="I_MSG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130402" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_CAGS_CI_REPORT_EXCEPTION" CMPNAME="CREATE" SCONAME="RO_EXCEPTION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130402" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCX_CAGS_CI_REPORT_EXCEPTION"/>
   <source>METHOD create.

    CREATE OBJECT ro_exception.
    ro_exception-&gt;m_error_code = i_code.
    ro_exception-&gt;m_msg = i_msg.

  ENDMETHOD.                    &quot;constructor</source>
  </method>
  <method CLSNAME="ZCX_CAGS_CI_REPORT_EXCEPTION" CMPNAME="GET_MSG_WITH_CODE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCX_CAGS_CI_REPORT_EXCEPTION" CMPNAME="GET_MSG_WITH_CODE" SCONAME="R_MSG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD get_msg_with_code.
    r_msg = m_msg &amp;&amp; &apos;. Error code=&apos; &amp;&amp; m_error_code.
  ENDMETHOD.                    &quot;get_msg_with_code</source>
  </method>
  <method CLSNAME="ZCX_CAGS_CI_REPORT_EXCEPTION" CMPNAME="RAISE_EXCEPTION" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20130522" MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCX_CAGS_CI_REPORT_EXCEPTION" CMPNAME="RAISE_EXCEPTION" SCONAME="I_CODE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-SUBRC" PARVALUE="&apos;0&apos;"/>
   <parameter CLSNAME="ZCX_CAGS_CI_REPORT_EXCEPTION" CMPNAME="RAISE_EXCEPTION" SCONAME="I_MSG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130327" CHANGEDBY="774888" CHANGEDON="20130402" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <exception CLSNAME="ZCX_CAGS_CI_REPORT_EXCEPTION" CMPNAME="RAISE_EXCEPTION" SCONAME="ZCX_CAGS_CI_REPORT_EXCEPTION" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="774888" CREATEDON="20130402" CHANGEDON="00000000"/>
   <source>METHOD raise_exception.

    DATA lo_exc TYPE REF TO zcx_cags_ci_report_exception.
    lo_exc = create(
        i_code = i_code
        i_msg  = i_msg
    ).
    RAISE EXCEPTION lo_exc.

  ENDMETHOD.                    &quot;raise_exception</source>
  </method>
 </CLAS>
 <FUGR SPRAS="E" AREA="ZCAGS_CI" AREAT="Automated Unit Tests function group">
  <mainprogram NAME="SAPLZCAGS_CI" VARCL="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" CNAM="774888" CDAT="20130522" UNAM="774888" UDAT="20130522" VERN="000001" RMAND="240" RLOAD="E" FIXPT="X" SDATE="20130522" STIME="161237" IDATE="20130522" ITIME="161237" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <source>*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZCAGS_CITOP.                      &quot; Global Data
  INCLUDE LZCAGS_CIUXX.                      &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZCAGS_CIF...                      &quot; Subroutines
* INCLUDE LZCAGS_CIO...                      &quot; PBO-Modules
* INCLUDE LZCAGS_CII...                      &quot; PAI-Modules
* INCLUDE LZCAGS_CIE...                      &quot; Events
* INCLUDE LZCAGS_CIP...                      &quot; Local class implement.</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZCAGS_CITOP" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" CNAM="774888" CDAT="20130522" UNAM="774888" UDAT="20130522" VERN="000001" RMAND="240" FIXPT="X" SDATE="20130522" STIME="161237" IDATE="20130522" ITIME="161237" LDBNAME="D$S" UCCHECK="X">
    <include_source>FUNCTION-POOL ZCAGS_CI.                     &quot;MESSAGE-ID ..

* INCLUDE LZCAGS_CID...                      &quot; Local class definition</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="ZCAGS_CI_RUN_TESTS_BATCH" REMOTE="R" STEXT="Run Unit Tests in batch job, remote enabled">
    <importing PARAMETER="I_EXEC_USER" DEFAULT="SY-UNAME" OPTIONAL="X" TYP="SY-UNAME"/>
    <exporting PARAMETER="E_RESULT_LOG" TYP="STRING"/>
    <documentation PARAMETER="I_EXEC_USER" KIND="P" INDEX=" 001"/>
    <documentation PARAMETER="E_RESULT_LOG" KIND="P" INDEX=" 002"/>
    <fm_source_new>DATA lo_caught_exc TYPE REF TO zcx_cags_ci_report_exception.
  DATA lo_ci_report TYPE REF TO zcl_cags_ci_report.

  lo_ci_report = zcl_cags_ci_report=&gt;get_instance( ).
  lo_ci_report-&gt;set_report_exec_user( i_exec_user ).
  lo_ci_report-&gt;init_default_files_path( ).

  TRY.
      IF ( lo_ci_report-&gt;is_run_lock_file( ) = abap_true ).

        zcx_cags_ci_report_exception=&gt;raise_exception( &apos;ERROR: Cannot start new test. Unit Test report is already in progress...&apos; ).

      ELSE.

        lo_ci_report-&gt;run_unit_tests_default_variant( ).
        e_result_log = &apos;Testing job scheduled&apos;.

      ENDIF.

    CATCH zcx_cags_ci_report_exception INTO lo_caught_exc.

      e_result_log = lo_caught_exc-&gt;get_msg_with_code( ).

  ENDTRY.</fm_source_new>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <PROG NAME="ZCAGS_SAUNIT_TEST_FROM_IDE" VARCL="X" DBAPL="S" SUBC="1" APPL="*" SECU="ZDEV" CNAM="774888" CDAT="20130522" UNAM="774888" UDAT="20130522" VERN="000001" RSTAT="K" RMAND="240" RLOAD="E" FIXPT="X" SDATE="20130522" STIME="161255" IDATE="20130522" ITIME="161255" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Run Unit Tests without checking batch mode" LENGTH="42 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZCAGS_SAUNIT_TEST_FROM_IDE
*&amp;
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;
*&amp;---------------------------------------------------------------------*

REPORT  ZCAGS_SAUNIT_TEST_FROM_IDE.

  type-pools:
    abap.

  parameters:
    p_Keys       type sabp_T_Tadir_Keys no-display,
    p_Cvrg       type flag              no-display,
    p_Durat      type saunit_D_Allowed_Rt_Duration  no-display,
    p_Risk       type saunit_D_Allowed_Risk_Level   no-display.

  rollback work.
  call function &apos;__SABP_AU_TEST_ITEMS_FROM_IDE&apos;
    exporting
      tadir_Keys  =               p_Keys
      with_Coverage =             p_Cvrg
      limit_On_Duration_Category =  p_Durat
      limit_On_Risk_Level =         p_Risk.
  commit work.</source>
 </PROG>
 <PROG NAME="ZCAGS_CI_TOP" VARCL="X" SUBC="I" CNAM="774888" CDAT="20130522" UNAM="774888" UDAT="20130522" VERN="000001" RMAND="240" RLOAD="E" SDATE="20130522" STIME="161255" IDATE="20130522" ITIME="161255" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Global variables definition for report" LENGTH="38 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include           ZCAGS_CI_TOP
*&amp;---------------------------------------------------------------------*
TABLES tdevc.
DATA gt_root_custom_packages TYPE tr_devclasses.

DATA g_packages_custom_auto_load      TYPE abap_bool.
DATA g_packages_customized            TYPE abap_bool.
DATA g_coverage_class_only            TYPE abap_bool.
DATA g_coverage_class_and_program     TYPE abap_bool.
DATA g_group_by_package               TYPE abap_bool.
DATA g_group_by_user                  TYPE abap_bool.</source>
 </PROG>
 <PROG NAME="ZCAGS_CI_SEL_SCREEN" VARCL="X" SUBC="I" APPL="*" CNAM="774888" CDAT="20130522" UNAM="774888" UDAT="20131020" VERN="000002" RSTAT="K" RMAND="240" RLOAD="E" SDATE="20131020" STIME="203305" IDATE="20131020" ITIME="203305" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Selection screen for CI Unit Tests report" LENGTH="41 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include           ZCAGS_CI_SEL_SCREEN
*&amp;---------------------------------------------------------------------*

SELECTION-SCREEN: BEGIN OF BLOCK 001 WITH FRAME TITLE text-001.
SELECT-OPTIONS: pr_pckg FOR tdevc-devclass NO INTERVALS MODIF ID xc2.
PARAMETERS: pr_1_1 RADIOBUTTON GROUP gr_1 USER-COMMAND flg DEFAULT &apos;X&apos;.
PARAMETERS: pr_1_2 RADIOBUTTON GROUP gr_1.
SELECTION-SCREEN: END OF BLOCK 001.

SELECTION-SCREEN: BEGIN OF BLOCK 002 WITH FRAME TITLE text-002.
PARAMETERS: pr_2_1 RADIOBUTTON GROUP gr_2 USER-COMMAND flg DEFAULT &apos;X&apos;.
PARAMETERS: pr_2_2 RADIOBUTTON GROUP gr_2.
SELECTION-SCREEN: END OF BLOCK 002.

SELECTION-SCREEN: BEGIN OF BLOCK 003 WITH FRAME TITLE text-003.
PARAMETERS: pr_3_1 RADIOBUTTON GROUP gr_3 USER-COMMAND flg DEFAULT &apos;X&apos;.
PARAMETERS: pr_3_2 RADIOBUTTON GROUP gr_3.
PARAMETERS: pr_3_3 RADIOBUTTON GROUP gr_3.
SELECTION-SCREEN: END OF BLOCK 003.

SELECTION-SCREEN: BEGIN OF BLOCK 004 WITH FRAME TITLE text-004.
PARAMETERS: p_tst_u TYPE string.
PARAMETERS: p_tst_p TYPE string.
PARAMETERS: p_cov_u TYPE string.
PARAMETERS: p_cov_p TYPE string.
SELECTION-SCREEN: END OF BLOCK 004.

SELECTION-SCREEN: BEGIN OF BLOCK 005 WITH FRAME TITLE text-005.
PARAMETERS: p_dir_l TYPE string DEFAULT &apos;\\SAP-IFACE01.ST.STATOIL.NO\TRANS\ERPDEV\&apos;.
PARAMETERS: p_dir_r TYPE string.
PARAMETERS: p_mail AS CHECKBOX DEFAULT &apos;X&apos; TYPE abap_bool.
SELECTION-SCREEN: END OF BLOCK 005.

SELECTION-SCREEN: BEGIN OF BLOCK 006 WITH FRAME TITLE text-006.

SELECTION-SCREEN: END OF BLOCK 006.</source>
 </PROG>
 <PROG NAME="ZCAGS_CI_REPORT" VARCL="X" DBAPL="S" SUBC="1" APPL="*" SECU="ZDEV" CNAM="774888" CDAT="20130522" UNAM="774888" UDAT="20131020" VERN="000002" RSTAT="K" RMAND="240" RLOAD="E" FIXPT="X" SDATE="20131020" STIME="203305" IDATE="20131020" ITIME="203305" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="I" KEY="001" ENTRY="Select Packages for report" LENGTH="26 "/>
    <textElement ID="I" KEY="002" ENTRY="Code coverage settings" LENGTH="22 "/>
    <textElement ID="I" KEY="003" ENTRY="Objects grouping mode" LENGTH="21 "/>
    <textElement ID="I" KEY="004" ENTRY="File name settings" LENGTH="18 "/>
    <textElement ID="I" KEY="005" ENTRY="Other settings" LENGTH="26 "/>
    <textElement ID="I" KEY="006" ENTRY="Hudson server settings" LENGTH="22 "/>
    <textElement ID="R" ENTRY="Continuous Integration Unit Tests main report" LENGTH="45 "/>
    <textElement ID="S" KEY="PR_1_1" ENTRY="        Y* and Z* packages auto loaded" LENGTH="38 "/>
    <textElement ID="S" KEY="PR_1_2" ENTRY="        Customized packages list" LENGTH="32 "/>
    <textElement ID="S" KEY="PR_2_1" ENTRY="        Classes coverage only" LENGTH="29 "/>
    <textElement ID="S" KEY="PR_2_2" ENTRY="        Classes and programs coverage" LENGTH="37 "/>
    <textElement ID="S" KEY="PR_3_1" ENTRY="        Grouped by user and package" LENGTH="35 "/>
    <textElement ID="S" KEY="PR_3_2" ENTRY="        Grouped by user" LENGTH="23 "/>
    <textElement ID="S" KEY="PR_3_3" ENTRY="        Grouped by package" LENGTH="26 "/>
    <textElement ID="S" KEY="PR_PCKG" ENTRY="        Packages for run" LENGTH="24 "/>
    <textElement ID="S" KEY="P_COV_P" ENTRY="        Coverage package file name" LENGTH="34 "/>
    <textElement ID="S" KEY="P_COV_U" ENTRY="        Coverage user file name" LENGTH="31 "/>
    <textElement ID="S" KEY="P_DIR_L" ENTRY="        Local SAP dir path" LENGTH="26 "/>
    <textElement ID="S" KEY="P_DIR_R" ENTRY="        Remote SAP dir path" LENGTH="27 "/>
    <textElement ID="S" KEY="P_MAIL" ENTRY="        Sent email for failures" LENGTH="38 "/>
    <textElement ID="S" KEY="P_TST_P" ENTRY="        Test package file name" LENGTH="30 "/>
    <textElement ID="S" KEY="P_TST_U" ENTRY="        Test user file name" LENGTH="27 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZCAGS_CI_REPORT
*&amp;
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;
*&amp;---------------------------------------------------------------------*

REPORT  zcags_ci_report.
INCLUDE zcags_ci_top.
INCLUDE zcags_ci_sel_screen.
INCLUDE zcags_ci_screen_handler.



DATA lo_ci_screen_handler             TYPE REF TO lcl_ci_screen_handler.

INITIALIZATION.

  CREATE OBJECT lo_ci_screen_handler.
  gt_root_custom_packages = zcl_cags_ci_metadata_dao=&gt;get_instance( )-&gt;find_custom_root_packages( ).

START-OF-SELECTION.

  lo_ci_screen_handler-&gt;run_unit_tests( ).

AT SELECTION-SCREEN OUTPUT.

  g_packages_custom_auto_load      = abap_false.
  g_packages_customized            = abap_false.
  g_coverage_class_only            = abap_false.
  g_coverage_class_and_program     = abap_false.
  g_group_by_package               = abap_false.
  g_group_by_user                  = abap_false.

  IF ( pr_1_1 = &apos;X&apos; ).
    g_packages_custom_auto_load     = abap_true.
  ELSEIF ( pr_1_2 = &apos;X&apos; ).
    g_packages_customized           = abap_true.
  ENDIF.

  IF ( pr_2_1 = &apos;X&apos; ).
    g_coverage_class_only           = abap_true.
  ELSEIF ( pr_2_2 = &apos;X&apos; ).
    g_coverage_class_and_program    = abap_true.
  ENDIF.

  IF ( pr_3_1 = &apos;X&apos; ).
    g_group_by_user              = abap_true.
    g_group_by_package              = abap_true.
  ELSEIF ( pr_3_2 = &apos;X&apos; ).
    g_group_by_user                 = abap_true.
  ELSEIF ( pr_3_3 = &apos;X&apos; ).
    g_group_by_package              = abap_true.
  ENDIF.

  IF ( g_packages_custom_auto_load = abap_true ).

    lo_ci_screen_handler-&gt;load_packages_to_selection( gt_root_custom_packages ).

  ENDIF.</source>
 </PROG>
 <PROG NAME="ZCAGS_CI_SCREEN_HANDLER" VARCL="X" SUBC="I" APPL="*" CNAM="774888" CDAT="20130522" UNAM="774888" UDAT="20131020" VERN="000002" RSTAT="K" RMAND="240" RLOAD="E" SDATE="20131020" STIME="203305" IDATE="20131020" ITIME="203305" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Screen handler and local classes for report" LENGTH="43 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include           ZCAGS_CI_SCREEN_HANDLER
*&amp;---------------------------------------------------------------------*
CLASS lcl_ci_screen_handler DEFINITION.
  PUBLIC SECTION.

    METHODS load_packages_to_selection
      IMPORTING
        it_packages TYPE tr_devclasses.


    METHODS run_unit_tests.
ENDCLASS.                    &quot;lcl_ci_screen_handler DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_ci_screen_handler IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_ci_screen_handler IMPLEMENTATION.

  METHOD load_packages_to_selection.

    DATA ls_custom_package TYPE devclass.

    REFRESH pr_pckg.
    pr_pckg-option  = &apos;EQ&apos;.
    pr_pckg-sign    = &apos;I&apos;.

    LOOP AT gt_root_custom_packages INTO ls_custom_package.
      pr_pckg-low     = ls_custom_package.
      APPEND pr_pckg TO pr_pckg.
    ENDLOOP.

  ENDMETHOD.                    &quot;load_packages_to_selection


  METHOD run_unit_tests.

    zcl_cags_ci_code_coverage=&gt;free_memory( ).
    zcl_cags_ci_report=&gt;free_config_memory( ).

    DATA lo_unit_tests_report TYPE REF TO zcl_cags_ci_report.
    lo_unit_tests_report = zcl_cags_ci_report=&gt;get_instance( ).

    lo_unit_tests_report-&gt;init(
      i_is_report_run = abap_true
      i_classes_coverage_only = boolc( g_coverage_class_only = abap_true )
      i_group_by_user = g_group_by_user
      i_group_by_package = g_group_by_package
      i_test_user_file = p_tst_u
      i_test_package_file = p_tst_p
      i_coverage_user_file = p_cov_u
      i_coverage_package_file = p_cov_p
      i_local_sap_dir = p_dir_l
      i_remote_dir = p_dir_r
      i_email_for_failures = p_mail
    ).
    lo_unit_tests_report-&gt;save_to_memory( ).

    lo_unit_tests_report-&gt;delete_sap_files( ).
    lo_unit_tests_report-&gt;lock_run( ).

    sy-ucomm = &apos;ONLI&apos;.

    SUBMIT rs_aucv_runner                 &quot;#EC CI_SUBMIT
        WITH so_devc IN pr_pckg           &quot; list of packages
        WITH b_email = &apos; &apos;                &quot; do not send mails opiton
        WITH b_direct = &apos;X&apos;               &quot; show results in ALV
        WITH p_aucv = &apos;X&apos;                 &quot; With code coverage
        WITH p_packr = &apos;X&apos;                &quot; with subpackages
        AND RETURN
      .

    zcl_cags_ci_code_coverage=&gt;free_memory( ).
    zcl_cags_ci_report=&gt;free_config_memory( ).

    lo_unit_tests_report-&gt;unlock_run( ).

  ENDMETHOD.                    &quot;run_unit_tests

ENDCLASS.                    &quot;lcl_ci_screen_handler IMPLEMENTATION</source>
 </PROG>
 <TABL TABNAME="ZCAGS_CI_CODE_COVERAGE_S" DDLANGUAGE="E" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Describes code coverage values for object" AUTHCLASS="00" AS4USER="774888" AS4DATE="20130522" AS4TIME="160441" PROZPUFF="000" EXCLASS="0">
  <dd09l AS4VERS="0000" SCHFELDANZ="000" AS4DATE="00000000" AS4TIME="000000"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="PARENT_OBJECT" DDLANGUAGE="E" POSITION="0001" ROLLNAME="CHAR255" ADMINFIELD="0" INTTYPE="C" INTLEN="000510" DOMNAME="CHAR255" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="07" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000255" OUTPUTLEN="000255" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Char255" SCRTEXT_S="Char255" DOMNAME3L="CHAR255" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="NAME" DDLANGUAGE="E" POSITION="0002" ROLLNAME="CHAR255" ADMINFIELD="0" INTTYPE="C" INTLEN="000510" DOMNAME="CHAR255" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="07" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000255" OUTPUTLEN="000255" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Char255" SCRTEXT_S="Char255" DOMNAME3L="CHAR255" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="CLASS_COVERAGE" DDLANGUAGE="E" POSITION="0003" ROLLNAME="ZCAGS_CI_CODE_COVERAGE_VAL_S" ADMINFIELD="0" INTLEN="000000" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="STRU" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  STRUS" MASKLEN="0000" DDTEXT="Code coverage values" DEPTH="00" COMPTYPE="S" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="PERCENT" DDLANGUAGE="E" POSITION="0004" ROLLNAME="INT4" ADMINFIELD="0" INTTYPE="X" INTLEN="000004" DOMNAME="INT4" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" SIGNFLAG="X" MASK="  INT4E" MASKLEN="0000" DDTEXT="Natural Number" SCRTEXT_S="Number" SCRTEXT_M="Number" SCRTEXT_L="Natural Number" DOMNAME3L="INT4" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="COUNT_COVERED" DDLANGUAGE="E" POSITION="0005" ROLLNAME="DEC10" ADMINFIELD="0" INTTYPE="P" INTLEN="000006" DOMNAME="E_DEC10" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="DEC" LENG="000010" OUTPUTLEN="000013" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Decimal field with length 10" DOMMASTER="D" DOMNAME3L="E_DEC10" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="COUNT_TOTAL" DDLANGUAGE="E" POSITION="0006" ROLLNAME="DEC10" ADMINFIELD="0" INTTYPE="P" INTLEN="000006" DOMNAME="E_DEC10" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="DEC" LENG="000010" OUTPUTLEN="000013" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Decimal field with length 10" DOMMASTER="D" DOMNAME3L="E_DEC10" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="METHOD_COVERAGE" DDLANGUAGE="E" POSITION="0007" ROLLNAME="ZCAGS_CI_CODE_COVERAGE_VAL_S" ADMINFIELD="0" INTLEN="000000" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="STRU" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  STRUS" MASKLEN="0000" DDTEXT="Code coverage values" DEPTH="00" COMPTYPE="S" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="PERCENT" DDLANGUAGE="E" POSITION="0008" ROLLNAME="INT4" ADMINFIELD="0" INTTYPE="X" INTLEN="000004" DOMNAME="INT4" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" SIGNFLAG="X" MASK="  INT4E" MASKLEN="0000" DDTEXT="Natural Number" SCRTEXT_S="Number" SCRTEXT_M="Number" SCRTEXT_L="Natural Number" DOMNAME3L="INT4" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="COUNT_COVERED" DDLANGUAGE="E" POSITION="0009" ROLLNAME="DEC10" ADMINFIELD="0" INTTYPE="P" INTLEN="000006" DOMNAME="E_DEC10" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="DEC" LENG="000010" OUTPUTLEN="000013" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Decimal field with length 10" DOMMASTER="D" DOMNAME3L="E_DEC10" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="COUNT_TOTAL" DDLANGUAGE="E" POSITION="0010" ROLLNAME="DEC10" ADMINFIELD="0" INTTYPE="P" INTLEN="000006" DOMNAME="E_DEC10" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="DEC" LENG="000010" OUTPUTLEN="000013" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Decimal field with length 10" DOMMASTER="D" DOMNAME3L="E_DEC10" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="BLOCK_COVERAGE" DDLANGUAGE="E" POSITION="0011" ROLLNAME="ZCAGS_CI_CODE_COVERAGE_VAL_S" ADMINFIELD="0" INTLEN="000000" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="STRU" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  STRUS" MASKLEN="0000" DDTEXT="Code coverage values" DEPTH="00" COMPTYPE="S" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="PERCENT" DDLANGUAGE="E" POSITION="0012" ROLLNAME="INT4" ADMINFIELD="0" INTTYPE="X" INTLEN="000004" DOMNAME="INT4" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" SIGNFLAG="X" MASK="  INT4E" MASKLEN="0000" DDTEXT="Natural Number" SCRTEXT_S="Number" SCRTEXT_M="Number" SCRTEXT_L="Natural Number" DOMNAME3L="INT4" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="COUNT_COVERED" DDLANGUAGE="E" POSITION="0013" ROLLNAME="DEC10" ADMINFIELD="0" INTTYPE="P" INTLEN="000006" DOMNAME="E_DEC10" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="DEC" LENG="000010" OUTPUTLEN="000013" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Decimal field with length 10" DOMMASTER="D" DOMNAME3L="E_DEC10" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="COUNT_TOTAL" DDLANGUAGE="E" POSITION="0014" ROLLNAME="DEC10" ADMINFIELD="0" INTTYPE="P" INTLEN="000006" DOMNAME="E_DEC10" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="DEC" LENG="000010" OUTPUTLEN="000013" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Decimal field with length 10" DOMMASTER="D" DOMNAME3L="E_DEC10" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="LINE_COVERAGE" DDLANGUAGE="E" POSITION="0015" ROLLNAME="ZCAGS_CI_CODE_COVERAGE_VAL_S" ADMINFIELD="0" INTLEN="000000" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="STRU" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  STRUS" MASKLEN="0000" DDTEXT="Code coverage values" DEPTH="00" COMPTYPE="S" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="PERCENT" DDLANGUAGE="E" POSITION="0016" ROLLNAME="INT4" ADMINFIELD="0" INTTYPE="X" INTLEN="000004" DOMNAME="INT4" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" SIGNFLAG="X" MASK="  INT4E" MASKLEN="0000" DDTEXT="Natural Number" SCRTEXT_S="Number" SCRTEXT_M="Number" SCRTEXT_L="Natural Number" DOMNAME3L="INT4" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="COUNT_COVERED" DDLANGUAGE="E" POSITION="0017" ROLLNAME="DEC10" ADMINFIELD="0" INTTYPE="P" INTLEN="000006" DOMNAME="E_DEC10" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="DEC" LENG="000010" OUTPUTLEN="000013" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Decimal field with length 10" DOMMASTER="D" DOMNAME3L="E_DEC10" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="COUNT_TOTAL" DDLANGUAGE="E" POSITION="0018" ROLLNAME="DEC10" ADMINFIELD="0" INTTYPE="P" INTLEN="000006" DOMNAME="E_DEC10" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="DEC" LENG="000010" OUTPUTLEN="000013" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Decimal field with length 10" DOMMASTER="D" DOMNAME3L="E_DEC10" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="PACKAGE" DDLANGUAGE="E" POSITION="0019" ROLLNAME="CHAR255" ADMINFIELD="0" INTTYPE="C" INTLEN="000510" DOMNAME="CHAR255" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="07" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000255" OUTPUTLEN="000255" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Char255" SCRTEXT_S="Char255" DOMNAME3L="CHAR255" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_S" FIELDNAME="USER" DDLANGUAGE="E" POSITION="0020" ROLLNAME="UNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="User Name" REPTEXT="User Name" SCRTEXT_S="User" SCRTEXT_M="User Name" SCRTEXT_L="User Name" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <TABL TABNAME="ZCAGS_CI_UNIT_METHOD_S" DDLANGUAGE="E" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Structure with information about method details" AUTHCLASS="00" AS4USER="774888" AS4DATE="20130522" AS4TIME="160436" PROZPUFF="000" EXCLASS="0">
  <dd09l AS4VERS="0000" SCHFELDANZ="000" AS4DATE="00000000" AS4TIME="000000"/>
  <dd03p TABNAME="ZCAGS_CI_UNIT_METHOD_S" FIELDNAME="CLASS_NAME" DDLANGUAGE="E" POSITION="0001" ROLLNAME="CHAR255" ADMINFIELD="0" INTTYPE="C" INTLEN="000510" DOMNAME="CHAR255" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="07" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000255" OUTPUTLEN="000255" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Char255" SCRTEXT_S="Char255" DOMNAME3L="CHAR255" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_UNIT_METHOD_S" FIELDNAME="METHOD_NAME" DDLANGUAGE="E" POSITION="0002" ROLLNAME="CHAR255" ADMINFIELD="0" INTTYPE="C" INTLEN="000510" DOMNAME="CHAR255" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="07" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000255" OUTPUTLEN="000255" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Char255" SCRTEXT_S="Char255" DOMNAME3L="CHAR255" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_UNIT_METHOD_S" FIELDNAME="ALERT_INFO" DDLANGUAGE="E" POSITION="0003" ROLLNAME="CHAR255" ADMINFIELD="0" INTTYPE="C" INTLEN="000510" DOMNAME="CHAR255" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="07" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000255" OUTPUTLEN="000255" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Char255" SCRTEXT_S="Char255" DOMNAME3L="CHAR255" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_UNIT_METHOD_S" FIELDNAME="AUTHOR_USER" DDLANGUAGE="E" POSITION="0004" ROLLNAME="UNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="User Name" REPTEXT="User Name" SCRTEXT_S="User" SCRTEXT_M="User Name" SCRTEXT_L="User Name" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_UNIT_METHOD_S" FIELDNAME="CLASS_PACKAGE" DDLANGUAGE="E" POSITION="0005" ROLLNAME="CHAR255" ADMINFIELD="0" INTTYPE="C" INTLEN="000510" DOMNAME="CHAR255" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="07" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000255" OUTPUTLEN="000255" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Char255" SCRTEXT_S="Char255" DOMNAME3L="CHAR255" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <TABL TABNAME="ZCAGS_CI_CONFIGURATION" DDLANGUAGE="E" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Configuration data for report" AUTHCLASS="00" AS4USER="774888" AS4DATE="20131020" AS4TIME="201803" PROZPUFF="000" EXCLASS="1">
  <dd09l AS4VERS="0000" SCHFELDANZ="000" AS4DATE="00000000" AS4TIME="000000"/>
  <dd03p TABNAME="ZCAGS_CI_CONFIGURATION" FIELDNAME="IS_REPORT_RUN" DDLANGUAGE="E" POSITION="0001" ROLLNAME="BOOLTYPE" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="BOOLTYPE" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="27" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Boolean function type" REPTEXT="Boolean function type" SCRTEXT_S="Bool.type" SCRTEXT_M="Bool. function type" SCRTEXT_L="Boolean function type" DOMNAME3L="BOOLTYPE" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CONFIGURATION" FIELDNAME="IS_CLASSES_COVERAGE_ONLY" DDLANGUAGE="E" POSITION="0002" ROLLNAME="BOOLTYPE" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="BOOLTYPE" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="27" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Boolean function type" REPTEXT="Boolean function type" SCRTEXT_S="Bool.type" SCRTEXT_M="Bool. function type" SCRTEXT_L="Boolean function type" DOMNAME3L="BOOLTYPE" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CONFIGURATION" FIELDNAME="IS_GROUP_BY_USER" DDLANGUAGE="E" POSITION="0003" ROLLNAME="BOOLTYPE" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="BOOLTYPE" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="27" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Boolean function type" REPTEXT="Boolean function type" SCRTEXT_S="Bool.type" SCRTEXT_M="Bool. function type" SCRTEXT_L="Boolean function type" DOMNAME3L="BOOLTYPE" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CONFIGURATION" FIELDNAME="IS_GROUP_BY_PACKAGE" DDLANGUAGE="E" POSITION="0004" ROLLNAME="BOOLTYPE" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="BOOLTYPE" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="27" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Boolean function type" REPTEXT="Boolean function type" SCRTEXT_S="Bool.type" SCRTEXT_M="Bool. function type" SCRTEXT_L="Boolean function type" DOMNAME3L="BOOLTYPE" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CONFIGURATION" FIELDNAME="TEST_USER_FILE" DDLANGUAGE="E" POSITION="0005" ROLLNAME="FILE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000514" DOMNAME="TEXT257" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000257" OUTPUTLEN="000257" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="File name" REPTEXT="File name" SCRTEXT_S="File name" SCRTEXT_M="File name" SCRTEXT_L="File name" DOMMASTER="D" DOMNAME3L="TEXT257" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CONFIGURATION" FIELDNAME="TEST_PACKAGE_FILE" DDLANGUAGE="E" POSITION="0006" ROLLNAME="FILE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000514" DOMNAME="TEXT257" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000257" OUTPUTLEN="000257" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="File name" REPTEXT="File name" SCRTEXT_S="File name" SCRTEXT_M="File name" SCRTEXT_L="File name" DOMMASTER="D" DOMNAME3L="TEXT257" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CONFIGURATION" FIELDNAME="COVERAGE_USER_FILE" DDLANGUAGE="E" POSITION="0007" ROLLNAME="FILE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000514" DOMNAME="TEXT257" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000257" OUTPUTLEN="000257" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="File name" REPTEXT="File name" SCRTEXT_S="File name" SCRTEXT_M="File name" SCRTEXT_L="File name" DOMMASTER="D" DOMNAME3L="TEXT257" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CONFIGURATION" FIELDNAME="COVERAGE_PACKAGE_FILE" DDLANGUAGE="E" POSITION="0008" ROLLNAME="FILE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000514" DOMNAME="TEXT257" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000257" OUTPUTLEN="000257" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="File name" REPTEXT="File name" SCRTEXT_S="File name" SCRTEXT_M="File name" SCRTEXT_L="File name" DOMMASTER="D" DOMNAME3L="TEXT257" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CONFIGURATION" FIELDNAME="LOCAL_SAP_DIR" DDLANGUAGE="E" POSITION="0009" ROLLNAME="FILE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000514" DOMNAME="TEXT257" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000257" OUTPUTLEN="000257" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="File name" REPTEXT="File name" SCRTEXT_S="File name" SCRTEXT_M="File name" SCRTEXT_L="File name" DOMMASTER="D" DOMNAME3L="TEXT257" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CONFIGURATION" FIELDNAME="REMOTE_HUDSON_DIR" DDLANGUAGE="E" POSITION="0010" ROLLNAME="FILE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000514" DOMNAME="TEXT257" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000257" OUTPUTLEN="000257" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="File name" REPTEXT="File name" SCRTEXT_S="File name" SCRTEXT_M="File name" SCRTEXT_L="File name" DOMMASTER="D" DOMNAME3L="TEXT257" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CONFIGURATION" FIELDNAME="EMAIL_FOR_FAILURES" DDLANGUAGE="E" POSITION="0011" ROLLNAME="BOOLTYPE" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="BOOLTYPE" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="27" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Boolean function type" REPTEXT="Boolean function type" SCRTEXT_S="Bool.type" SCRTEXT_M="Bool. function type" SCRTEXT_L="Boolean function type" DOMNAME3L="BOOLTYPE" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <TABL TABNAME="ZCAGS_CI_CODE_COVERAGE_VAL_S" DDLANGUAGE="E" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Code coverage values" AUTHCLASS="00" AS4USER="774888" AS4DATE="20130522" AS4TIME="160435" PROZPUFF="000" EXCLASS="0">
  <dd09l AS4VERS="0000" SCHFELDANZ="000" AS4DATE="00000000" AS4TIME="000000"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_VAL_S" FIELDNAME="PERCENT" DDLANGUAGE="E" POSITION="0001" ROLLNAME="INT4" ADMINFIELD="0" INTTYPE="X" INTLEN="000004" DOMNAME="INT4" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" SIGNFLAG="X" MASK="  INT4E" MASKLEN="0000" DDTEXT="Natural Number" SCRTEXT_S="Number" SCRTEXT_M="Number" SCRTEXT_L="Natural Number" DOMNAME3L="INT4" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_VAL_S" FIELDNAME="COUNT_COVERED" DDLANGUAGE="E" POSITION="0002" ROLLNAME="DEC10" ADMINFIELD="0" INTTYPE="P" INTLEN="000006" DOMNAME="E_DEC10" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="DEC" LENG="000010" OUTPUTLEN="000013" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Decimal field with length 10" DOMMASTER="D" DOMNAME3L="E_DEC10" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZCAGS_CI_CODE_COVERAGE_VAL_S" FIELDNAME="COUNT_TOTAL" DDLANGUAGE="E" POSITION="0003" ROLLNAME="DEC10" ADMINFIELD="0" INTTYPE="P" INTLEN="000006" DOMNAME="E_DEC10" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="DEC" LENG="000010" OUTPUTLEN="000013" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Decimal field with length 10" DOMMASTER="D" DOMNAME3L="E_DEC10" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <TTYP TYPENAME="ZCAGS_CI_CODE_COVERAGE_TT" DDLANGUAGE="E" ROWTYPE="ZCAGS_CI_CODE_COVERAGE_S" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="S" KEYDEF="K" KEYKIND="N" KEYFDCOUNT="0001" AS4USER="774888" AS4DATE="20130522" AS4TIME="160502" DDTEXT="Table of code coverage for objects" TYPELEN="001620" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000">
  <dd42v TYPENAME="ZCAGS_CI_CODE_COVERAGE_TT" KEYFDPOS="0001" ROWTYPEPOS="0001" KEYFIELD="PARENT_OBJECT"/>
 </TTYP>
 <TTYP TYPENAME="ZCAGS_CI_UNIT_METHOD_TT" DDLANGUAGE="E" ROWTYPE="ZCAGS_CI_UNIT_METHOD_S" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" AS4USER="774888" AS4DATE="20130522" AS4TIME="160442" DDTEXT="Table of unit tests methods" TYPELEN="002064" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <CLAS CLSNAME="ZCL_UTIL_STRING" VERSION="1" LANGU="E" DESCRIPT="Class for handling common string operations" UUID="0017A48DA7BC1EE1AAB0A9B29F859EA4" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="774888" CREATEDON="20120529" CHANGEDON="20140619" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>*----------------------------------------------------------------------*
*       CLASS ZCL_UTIL_STRING DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
class ZCL_UTIL_STRING definition
  public
  create public .

public section.

  class-methods REMOVE_PREFIX
    importing
      !I_CHARS_TO_REMOVE_COUNT type NUM
      !I_STRING type ANY
    returning
      value(R_RESULT) type STRING .
*&quot;* public components of class ZCL_UTIL_STRING
*&quot;* do not include other source files here!!!
  class-methods TO_LOWER_CASE
    importing
      !I_STRING type STRING
    returning
      value(R_STRING) type STRING .
  class-methods TO_UPPER_CASE
    importing
      !I_STRING type STRING
    returning
      value(R_STRING) type STRING .
  type-pools ABAP .
  class-methods CONTAINS_ONLY_LETTERS
    importing
      !I_STRING type STRING
    returning
      value(R_CONTAINS_ONLY_LETTERS) type ABAP_BOOL .
  class-methods CONTAINS_ONLY_DIGITS
    importing
      !I_STRING type STRING
    returning
      value(R_CONTAINS_ONLY_DIGITS) type ABAP_BOOL .
  class-methods STARTS_WITH
    importing
      !I_STRING type ANY
      !I_PREFIX type STRING
    returning
      value(R_STARTS_WITH) type ABAP_BOOL .
  class-methods ENDS_WITH
    importing
      !I_STRING type STRING
      !I_SUFFIX type STRING
    returning
      value(R_ENDS_WITH) type ABAP_BOOL .
  class-methods SUBSTRING
    importing
      !I_STRING type STRING
      !I_LENGTH type I
    returning
      value(R_STRING) type STRING .
  class-methods REMOVE_LEADING_ZEROS
    importing
      !I_TO_FIX type ANY
    returning
      value(R_FIXED) type STRING .
  class-methods ADD_LEADING_ZEROS
    importing
      !I_INPUT type CLIKE
    exporting
      value(E_OUTPUT) type CLIKE .
  class-methods URL_ENCODE
    importing
      !I_STRING_TO_ENCODE type STRING
    returning
      value(R_ENCODED_STRING) type STRING .</publicSection>
  <protectedSection>PROTECTED SECTION.
*&quot;* protected components of class ZCL_UTIL_STRING
*&quot;* do not include other source files here!!!</protectedSection>
  <privateSection>private section.

*&quot;* private components of class ZCL_UTIL_STRING
*&quot;* do not include other source files here!!!
  class-data C_LETTERS type CHAR26 value &apos;abcdefghijklmnopqrstuvwxyz&apos;. &quot;#EC NOTEXT . &quot; .
  class-data C_DIGITS type CHAR10 value &apos;0123456789&apos;. &quot;#EC NOTEXT . &quot; .</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCL_UTIL_STRING" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCL_UTIL_STRING" CMPNAME="C_DIGITS" VERSION="1" LANGU="E" DESCRIPT="Digits" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20130725" ATTDECLTYP="1" ATTVALUE="&apos;0123456789&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR10" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_UTIL_STRING" CMPNAME="C_LETTERS" VERSION="1" LANGU="E" DESCRIPT="Standard letters" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20130725" ATTDECLTYP="1" ATTVALUE="&apos;abcdefghijklmnopqrstuvwxyz&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR26" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_UTIL_STRING" CMPNAME="ADD_LEADING_ZEROS" VERSION="1" LANGU="E" DESCRIPT="Add leading zeros" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " AUTHOR="652822" CREATEDON="20140310" CHANGEDON="20140619" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="731" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="ADD_LEADING_ZEROS" SCONAME="I_INPUT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="652822" CREATEDON="20140310" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="ADD_LEADING_ZEROS" SCONAME="E_OUTPUT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="652822" CREATEDON="20140310" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="CLIKE"/>
   <source>METHOD add_leading_zeros.

  CALL FUNCTION &apos;CONVERSION_EXIT_ALPHA_INPUT&apos;
    EXPORTING
      input  = i_input
    IMPORTING
      output = e_output.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_UTIL_STRING" CMPNAME="CONTAINS_ONLY_DIGITS" VERSION="1" LANGU="E" DESCRIPT="Check if string contains only digits" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20140619" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="CONTAINS_ONLY_DIGITS" SCONAME="I_STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="CONTAINS_ONLY_DIGITS" SCONAME="R_CONTAINS_ONLY_DIGITS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>METHOD contains_only_digits.

    IF ( i_string IS INITIAL OR i_string = &apos;&apos; ).
      r_contains_only_digits = abap_false.
    ELSEIF ( i_string CO c_digits ).
      r_contains_only_digits = abap_true.
    ELSE.
      r_contains_only_digits = abap_false.
    ENDIF.

  ENDMETHOD.                    &quot;CONTAINS_ONLY_DIGITS</source>
  </method>
  <method CLSNAME="ZCL_UTIL_STRING" CMPNAME="CONTAINS_ONLY_LETTERS" VERSION="1" LANGU="E" DESCRIPT="Check if string contains only letters" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20140619" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="CONTAINS_ONLY_LETTERS" SCONAME="I_STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="CONTAINS_ONLY_LETTERS" SCONAME="R_CONTAINS_ONLY_LETTERS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>METHOD contains_only_letters.

    IF ( i_string IS INITIAL OR i_string = &apos;&apos; ).
      r_contains_only_letters = abap_false.
    ELSEIF ( i_string CO c_letters ).
      r_contains_only_letters = abap_true.
    ELSE.
      r_contains_only_letters = abap_false.
    ENDIF.

  ENDMETHOD.                    &quot;contains_only_letters</source>
  </method>
  <method CLSNAME="ZCL_UTIL_STRING" CMPNAME="ENDS_WITH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="774888" CREATEDON="20130626" CHANGEDBY="774888" CHANGEDON="20140619" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="ENDS_WITH" SCONAME="I_STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130626" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="ENDS_WITH" SCONAME="I_SUFFIX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130626" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="ENDS_WITH" SCONAME="R_ENDS_WITH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130626" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>METHOD ends_with.
    DATA l_suffix_length TYPE I.
    DATA l_string_length TYPE I.
    DATA l_pre_suffix_length TYPE I.
    DATA l_same_length_end_word TYPE string.
    l_suffix_length = STRLEN( i_suffix ).
    l_string_length = STRLEN( i_string ).
    IF ( l_suffix_length &gt; l_string_length ).
      r_ends_with = abap_false.
    ELSE.
      l_pre_suffix_length = l_string_length - l_suffix_length.
      l_same_length_end_word = i_string+l_pre_suffix_length(l_suffix_length).
      r_ends_with = boolc( l_same_length_end_word = i_suffix ).
    ENDIF.

  ENDMETHOD.                    &quot;ends_with</source>
  </method>
  <method CLSNAME="ZCL_UTIL_STRING" CMPNAME="REMOVE_LEADING_ZEROS" VERSION="1" LANGU="E" DESCRIPT="Remove leading zeros" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="652822" CREATEDON="20140131" CHANGEDON="20140619" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="731" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="REMOVE_LEADING_ZEROS" SCONAME="I_TO_FIX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="652822" CREATEDON="20140131" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="REMOVE_LEADING_ZEROS" SCONAME="R_FIXED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="652822" CREATEDON="20140131" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD remove_leading_zeros.

  r_fixed = i_to_fix.
  SHIFT r_fixed LEFT DELETING LEADING &apos;0&apos;.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_UTIL_STRING" CMPNAME="REMOVE_PREFIX" VERSION="1" LANGU="E" DESCRIPT="Remove prefix based on number of characters" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130723" CHANGEDBY="774888" CHANGEDON="20140619" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="731" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="REMOVE_PREFIX" SCONAME="I_CHARS_TO_REMOVE_COUNT" VERSION="1" LANGU="E" DESCRIPT="Sequence number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20130723" CHANGEDBY="774888" CHANGEDON="20130723" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="NUM"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="REMOVE_PREFIX" SCONAME="I_STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20130723" CHANGEDBY="774888" CHANGEDON="20130723" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="REMOVE_PREFIX" SCONAME="R_RESULT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20130723" CHANGEDBY="774888" CHANGEDON="20130723" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>method REMOVE_PREFIX.

  DATA l_string_length TYPE I.
  DATA l_string TYPE string.

  l_string = i_string.
  l_string_length = strlen( l_string ).
  if ( i_chars_to_remove_count &lt; l_string_length ).
    r_result = l_string+i_chars_to_remove_count.
  else.
    r_result = &apos;&apos;.
  ENDIF.

endmethod.</source>
  </method>
  <method CLSNAME="ZCL_UTIL_STRING" CMPNAME="STARTS_WITH" VERSION="1" LANGU="E" DESCRIPT="Check if string start with prefix" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20140619" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="STARTS_WITH" SCONAME="I_STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20130723" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="STARTS_WITH" SCONAME="I_PREFIX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="STARTS_WITH" SCONAME="R_STARTS_WITH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>METHOD starts_with.

    DATA l_string_prefix TYPE string.
    DATA l_prefix_length TYPE i.
    DATA l_string_typed TYPE string.

    l_string_typed = i_string.

    IF ( l_string_typed IS INITIAL OR l_string_typed = &apos;&apos; ).
      r_starts_with = abap_false.
    ELSEIF ( i_prefix IS INITIAL OR i_prefix = &apos;&apos; ).
      r_starts_with = abap_true.
    ELSEIF ( strlen( i_prefix ) &gt; strlen( l_string_typed ) ).
      r_starts_with = abap_false.
    ELSE.

      l_prefix_length = strlen( i_prefix ).
      l_string_prefix = l_string_typed(l_prefix_length).

      IF ( l_string_prefix = i_prefix ).
        r_starts_with = abap_true.
      ELSE.
        r_starts_with = abap_false.
      ENDIF.
    ENDIF.

  ENDMETHOD.                    &quot;starts_with</source>
  </method>
  <method CLSNAME="ZCL_UTIL_STRING" CMPNAME="SUBSTRING" VERSION="1" LANGU="E" DESCRIPT="Get substring of a string" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="774888" CREATEDON="20120603" CHANGEDBY="774888" CHANGEDON="20140619" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="SUBSTRING" SCONAME="I_STRING" VERSION="1" LANGU="E" DESCRIPT="Input string" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20120603" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="SUBSTRING" SCONAME="I_LENGTH" VERSION="1" LANGU="E" DESCRIPT="Sequence number" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20120603" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="SUBSTRING" SCONAME="R_STRING" VERSION="1" LANGU="E" DESCRIPT="Substring starting from 0 with length chars" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20120603" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD substring.

    DATA l_string_length TYPE num.
    l_string_length = strlen( i_string ).
    IF ( i_length &lt;= 0 ).
      r_string = &apos;&apos;.
    ELSEIF ( i_length &gt;= l_string_length ).
      r_string = i_string.
    ELSE.
      r_string = i_string+0(i_length).
    ENDIF.

  ENDMETHOD.                    &quot;SUBSTRING</source>
  </method>
  <method CLSNAME="ZCL_UTIL_STRING" CMPNAME="TO_LOWER_CASE" VERSION="1" LANGU="E" DESCRIPT="Convert string to lower case" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20140619" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="TO_LOWER_CASE" SCONAME="I_STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="TO_LOWER_CASE" SCONAME="R_STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD to_lower_case.

    DATA l_string TYPE string.
    l_string = i_string.
    TRANSLATE l_string TO LOWER CASE.
    r_string = l_string.

  ENDMETHOD.                    &quot;TO_LOWER_CASE</source>
  </method>
  <method CLSNAME="ZCL_UTIL_STRING" CMPNAME="TO_UPPER_CASE" VERSION="1" LANGU="E" DESCRIPT="Convert string to upper case" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20140619" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="TO_UPPER_CASE" SCONAME="I_STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="TO_UPPER_CASE" SCONAME="R_STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="774888" CREATEDON="20120529" CHANGEDBY="774888" CHANGEDON="20130626" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD to_upper_case.

    DATA l_string TYPE string.
    l_string = i_string.
    TRANSLATE l_string TO UPPER CASE.
    r_string = l_string.

  ENDMETHOD.                    &quot;TO_UPPER_CASE</source>
  </method>
  <method CLSNAME="ZCL_UTIL_STRING" CMPNAME="URL_ENCODE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " AUTHOR="652822" CREATEDON="20140408" CHANGEDON="20140619" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="731" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="URL_ENCODE" SCONAME="I_STRING_TO_ENCODE" VERSION="1" LANGU="E" DESCRIPT="ALE/Web (ITS) context - field contents" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="652822" CREATEDON="20140408" CHANGEDBY="652822" CHANGEDON="20140408" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_UTIL_STRING" CMPNAME="URL_ENCODE" SCONAME="R_ENCODED_STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="652822" CREATEDON="20140408" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD url_encode.

  DATA:
    l_value_to_encode TYPE avwctxcont,
    l_value_encoded   TYPE avwctxcont.

  l_value_to_encode = i_string_to_encode.
  CALL FUNCTION &apos;WWW_URLENCODE&apos;
    EXPORTING
      value         = l_value_to_encode
    IMPORTING
      value_encoded = l_value_encoded.

  r_encoded_string = l_value_encoded.

ENDMETHOD.</source>
  </method>
 </CLAS>
</nugget>
